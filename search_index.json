[["biomedicalKnowledge.html", "Biomedical Knowledge Mining using GOSemSim and clusterProfiler üìñ Introduction üéØ Motivation üìù Citation üìö Book structure üíñ Want to help? Chapter 1 Overview of semantic similarity analysis 1.1 Information content-based methods 1.2 Graph-based method 1.3 Combine methods 1.4 Summary Chapter 2 GO semantic similarity analysis 2.1 Semantic data 2.2 Supported organisms 2.3 GO semantic similarity measurement 2.4 Gene semantic similarity measurement 2.5 Gene cluster semantic similarity measurement Chapter 3 DO semantic similarity analysis 3.1 DO term semantic similarity measurement 3.2 Gene semantic similarity measurement 3.3 Gene cluster semantic similarity measurement Chapter 4 MeSH semantic similarity analysis 4.1 Supported organisms 4.2 MeSH semantic similarity measurement 4.3 Gene semantic similarity measurement Chapter 5 Overview of enrichment analysis 5.1 Terminology 5.2 Over Representation Analysis 5.3 Gene Set Enrichment Analysis 5.4 Leading edge analysis and core enriched genes Chapter 6 GO enrichment analysis 6.1 Supported organisms 6.2 GO classification 6.3 GO over-representation analysis 6.4 GO Gene Set Enrichment Analysis 6.5 GO analysis for non-model organisms 6.6 Visualize enriched GO terms as a directed acyclic graph 6.7 Summary Chapter 7 KEGG enrichment analysis 7.1 Supported organisms 7.2 KEGG pathway over-representation analysis 7.3 KEGG pathway gene set enrichment analysis 7.4 KEGG module over-representation analysis 7.5 KEGG module gene set enrichment analysis 7.6 Visualize enriched KEGG pathways Chapter 8 WikiPathways analysis 8.1 WikiPathways over-representation analysis 8.2 WikiPathways gene set enrichment analysis Chapter 9 Reactome enrichment analysis 9.1 Supported organisms 9.2 Reactome pathway over-representation analysis 9.3 Reactome pathway gene set enrichment analysis 9.4 Pathway Visualization Chapter 10 Disease enrichment analysis 10.1 Disease over-representation analysis 10.2 Disease gene set enrichment analysis Chapter 11 MeSH enrichment analysis 11.1 MeSH over-representation analysis 11.2 MeSH gene set enrichment analysis Chapter 12 Universal enrichment analysis 12.1 Input data 12.2 Cell Marker 12.3 MSigDb analysis Chapter 13 Functional enrichment analysis of genomic coordinations Chapter 14 Biological theme comparison 14.1 Comparing multiple gene lists 14.2 Formula interface of compareCluster 14.3 Visualization of profile comparison 14.4 Summary Chapter 15 Visualization of functional enrichment result 15.1 Bar Plot 15.2 Dot plot 15.3 Gene-Concept Network 15.4 Heatmap-like functional classification 15.5 Enrichment Map 15.6 Biological theme comparison 15.7 UpSet Plot 15.8 ridgeline plot for expression distribution of GSEA result 15.9 running score and preranked list of GSEA result 15.10 pubmed trend of enriched terms Chapter 16 dplyr verbs for manipulating enrichment result 16.1 filter 16.2 arrange 16.3 select 16.4 mutate 16.5 slice 16.6 summarise Chapter 17 Useful utilities 17.1 Translating Biological ID 17.2 setReadable: translating gene IDs to human readable symbols 17.3 Parsing GMT files 17.4 GO utilities A Frequently asked questions A.1 How to prepare your own geneList A.2 No gene can be mapped A.3 Showing specific pathways A.4 How to extract genes of a specific term/pathway References", " Biomedical Knowledge Mining using GOSemSim and clusterProfiler Guangchuang Yu 2021-08-16 üìñ Introduction hello üéØ Motivation The book is meant as a guide for mining biological knowledge to elucidate or interpret molecular mechanisms using a suite of R packages, including ChIPseeker, clusterProfiler, DOSE, enrichplot, GOSemSim, meshes and ReactomePA. Hence, if you are starting to read this book, we assume you have a working knowledge of how to use R. üìù Citation If you use the software suite in published research, please cite the most appropriate paper(s) from this list: T Wu#, E Hu#, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo*, G Yu*. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141. doi: 10.1016/j.xinn.2021.100141 G Yu*. Gene Ontology Semantic Similarity Analysis Using GOSemSim. In: Kidder B. (eds) Stem Cell Transcriptional Networks. Methods in Molecular Biology. 2020, 2117:207-215. Humana, New York, NY. doi: 10.1007/978-1-0716-0301-7_11 G Yu*. Using meshes for MeSH term enrichment and semantic analyses. Bioinformatics. 2018, 34(21):3766‚Äì3767. doi: 10.1093/bioinformatics/bty410 G Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems. 2016, 12(2):477-479. doi: 10.1039/C5MB00663E G Yu*, LG Wang, and QY He*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics. 2015, 31(14):2382-2383. doi: 10.1093/bioinformatics/btv145 G Yu*, LG Wang, GR Yan, QY He*. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics. 2015, 31(4):608-609. doi: 10.1093/bioinformatics/btu684 G Yu, LG Wang, Y Han and QY He*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287. doi: 10.1089/omi.2011.0118 G Yu, F Li, Y Qin, X Bo*, Y Wu, S Wang*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978. doi: 10.1093/bioinformatics/btq064 üìö Book structure Part 1 (Semantic similarity analysis) describes GOSemSim, DOSE and meshes packages for measuring semantic similarity of genes or gene products based on Gene Ontology, Disease Ontology and Medical Subject Headings. Part 2 (Enrichment analysis) introduces over-reprensentation analysis and gene set enrichment analysis using clusterProfiler (supports GO, KEGG, MSigDb, WikiPathway, and many others via universal interface), DOSE (DO, Disease-Gene Network, Network of Cancer Genes), meshes (MeSH), and ReactomePA (Reactome pathway). Functional enrichment analysis of Genomic coordination is supported via ChIPseeker and comparison among multiple conditions is also supported by clusterProfiler. We implemented a number of visualization methods in the enrichplot package to help users to interpret their results. Part 3 (Miscellaneous topics) describes useful utilities including translating gene IDs and manipulating enrichment results. üíñ Want to help? The book‚Äôs source code is hosted on GitHub, at https://github.com/YuLab-SMU/biomedical-knowledge-mining-book. Any feedback on the book is very welcome. Feel free to open an issue on GitHub or send me a pull request if you notice typos or other issues (I‚Äôm not a native English speaker ;) ). Chapter 1 Overview of semantic similarity analysis Functional similarity of gene products can be estimated by controlled biological vocabularies, such as Gene Ontology (GO), Disease Ontology (DO) and Medical Subject Headings (MeSH). Four methods including Resnik (Philip 1999), Jiang (Jiang and Conrath 1997), Lin (Lin 1998) and Schlicker (Schlicker et al. 2006) have been presented to determine the semantic similarity of two GO terms based on the annotation statistics of their common ancestor terms. Wang (Wang et al. 2007) proposed a method to measure the similarity based on the graph structure of GO. Each of these methods has its own advantages and weaknesses and can be applied to other ontologies that have similar structure (i.e.¬†directed acyclic graph). 1.1 Information content-based methods Four methods proposed by Resnik (Philip 1999), Jiang (Jiang and Conrath 1997), Lin (Lin 1998) and Schlicker (Schlicker et al. 2006) are information content (IC) based, which depend on the frequencies of two GO terms involved and that of their closest common ancestor term in a specific corpus of GO annotations. The information content of a GO term is computed by the negative log probability of the term occurring in GO corpus. A rarely used term contains a greater amount of information. The frequency of a term t is defined as: \\[p(t) = \\frac{n_{t&#39;}}{N} | t&#39; \\in \\left\\{t, \\; children\\: of\\: t \\right\\}\\] where \\(n_{t&#39;}\\) is the number of term \\(t&#39;\\), and \\(N\\) is the total number of terms in GO corpus. Thus the information content is defined as: \\[IC(t) = -\\log(p(t))\\] As GO allow multiple parents for each concept, two terms can share parents by multiple paths. IC-based methods calculate similarity of two GO terms based on the information content of their closest common ancestor term, which was also called most informative common ancestor (MICA). 1.1.1 Resnik method The Resnik method is defined as: \\[sim_{Resnik}(t_1,t_2) = IC(MICA)\\] 1.1.2 Lin method The Lin method is defined as: \\[sim_{Lin}(t_1,t_2) = \\frac{2IC(MICA)}{IC(t_1)+IC(t_2)}\\] 1.1.3 Rel method The Relevance method, which was proposed by Schlicker, combine Resnik‚Äôs and Lin‚Äôs method and is defined as: \\[sim_{Rel}(t_1,t_2) = \\frac{2IC(MICA)(1-p(MICA))}{IC(t_1)+IC(t_2)}\\] 1.1.4 Jiang method The Jiang and Conrath‚Äôs method is defined as: \\[sim_{Jiang}(t_1,t_2) = 1-\\min(1, IC(t_1) + IC(t_2) - 2IC(MICA))\\] 1.2 Graph-based method Graph-based methods using the topology of GO graph structure to compute semantic similarity. Formally, a GO term A can be represented as \\(DAG_{A}=(A,T_{A},E_{A})\\) where \\(T_{A}\\) is the set of GO terms in \\(DAG_{A}\\), including term A and all of its ancestor terms in the GO graph, and \\(E_{A}\\) is the set of edges connecting the GO terms in \\(DAG_{A}\\). 1.2.1 Wang method To encode the semantic of a GO term in a measurable format to enable a quantitative comparison, Wang(Wang et al. 2007) firstly defined the semantic value of term A as the aggregate contribution of all terms in \\(DAG_{A}\\) to the semantics of term A, terms closer to term A in \\(DAG_{A}\\) contribute more to its semantics. Thus, defined the contribution of a GO term \\(t\\) to the semantic of GO term \\(A\\) as the S-value of GO term \\(t\\) related to term \\(A\\). For any of term \\(t\\) in \\(DAG_{A}\\), its S-value related to term \\(A\\), \\(S_{A}(\\textit{t})\\) is defined as: \\[\\left\\{\\begin{array}{l} S_{A}(A)=1 \\\\ S_{A}(\\textit{t})=\\max\\{w_{e} \\times S_{A}(\\textit{t}&#39;) | \\textit{t}&#39; \\in children \\: of(\\textit{t}) \\} \\; if \\: \\textit{t} \\ne A \\end{array} \\right.\\] where \\(w_{e}\\) is the semantic contribution factor for edge \\(e \\in E_{A}\\) linking term \\(t\\) with its child term \\(t&#39;\\). Term \\(A\\) contributes to its own is defined as 1. After obtaining the S-values for all terms in \\(DAG_{A}\\), the semantic value of DO term A, \\(SV(A)\\), is calculated as: \\[SV(A)=\\displaystyle\\sum_{t \\in T_{A}} S_{A}(t)\\] Thus given two GO terms A and B, the semantic similarity between these two terms is defined as: \\[sim_{Wang}(A, B) = \\frac{\\displaystyle\\sum_{t \\in T_{A} \\cap T_{B}}{S_{A}(t) + S_{B}(t)}}{SV(A) + SV(B)}\\] where \\(S_{A}(\\textit{t})\\) is the S-value of GO term \\(t\\) related to term \\(A\\) and \\(S_{B}(\\textit{t})\\) is the S-value of GO term \\(t\\) related to term \\(B\\). This method proposed by Wang (Wang et al. 2007) determines the semantic similarity of two GO terms based on both the locations of these terms in the GO graph and their relations with their ancestor terms. 1.3 Combine methods Since a gene product can be annotated by multiple GO terms, semantic similarity among gene products needs to be aggregated from different semantic similarity scores of multiple GO terms associated with genes, including max, avg, rcmax and BMA. 1.3.1 max The max method calculates the maximum semantic similarity score over all pairs of GO terms between these two GO term sets. \\[sim_{max}(g_1, g_2) = \\displaystyle\\max_{1 \\le i \\le m, 1 \\le j \\le n} sim(go_{1i}, go_{2j})\\] 1.3.2 avg The avg calculates the average semantic similarity score over all pairs of GO terms. \\[sim_{avg}(g_1, g_2) = \\frac{\\displaystyle\\sum_{i=1}^m\\sum_{j=1}^nsim(go_{1i}, go_{2j})}{m \\times n}\\] 1.3.3 rcmax Similarities among two sets of GO terms form a matrix, the rcmax method uses the maximum of RowScore and ColumnScore, where RowScore (or ColumnScore) is the average of maximum similarity on each row (or column). \\[sim_{rcmax}(g_1, g_2) = \\max(\\frac{\\displaystyle\\sum_{i=1}^m \\max_{1 \\le j \\le n} sim(go_{1i}, go_{2j})}{m},\\frac{\\displaystyle\\sum_{j=1}^n \\max_{1 \\le i \\le m} sim(go_{1i},go_{2j})}{n})\\] 1.3.4 BMA The BMA method, used the Best-Match Average strategy, calculates the average of all maximum similarities on each row and column, and is defined as: \\[sim_{BMA}(g_1, g_2) = \\frac{\\displaystyle\\sum_{1=i}^m \\max_{1 \\le j \\le n}sim(go_{1i}, go_{2j}) + \\displaystyle\\sum_{1=j}^n \\max_{1 \\le i \\le m}sim(go_{1i}, go_{2j})} {m+n}\\] 1.4 Summary The idea behind semantic similarity measurement is the notion that genes with similar function should have similar annotation vocabulary and have a close relationship in the ontology strucutre. Measuring similarity is critical for expanding knownledge, since similar objects tend to behave similarly, which supports many bioinformatics applications to infer gene/protein functions, miRNA function, genetic interaction, protein-protein interaction, miRNA-mRNA interaction and celluar localization. We developed several Bioconductor packages, including GOSemSim (Yu et al. 2010; Yu 2020) for computing semantic similarity among GO terms, sets of GO terms, gene products and gene clusters (see also Chapter 2), DOSE (Yu et al. 2015) for Disease Ontology (DO) (see also Chapter 3) and meshes (Yu 2018) that based on Medical Subject Headings (MeSH) (see also Chapter 4). Chapter 2 GO semantic similarity analysis GOSemSim implemented all methods described in Chapter 1, including four IC-based methods and one graph-based method. 2.1 Semantic data To measure semantic similarity, we need to prepare GO annotations including GO structure (i.e.¬†GO term relationships) and gene to GO mapping. For IC-based methods, information of GO term is species specific. We need to calculate IC for all GO terms of a species before we measure semantic similarity. GOSemSim provides the godata() function to prepare semantic data to support measuring GO and gene simiarlity. It internally used the GO.db package to obtain GO strucuture and OrgDb for gene to GO mapping. library(GOSemSim) hsGO &lt;- godata(&#39;org.Hs.eg.db&#39;, ont=&quot;MF&quot;) User can set computeIC=FALSE if they only want to use Wang‚Äôs method. 2.2 Supported organisms GOSemSim supports all organisms that have an OrgDb object available. Bioconductor have already provided OrgDb for about 20 species. We can query OrgDb online via the AnnotationHub package. For example: library(AnnotationHub) hub &lt;- AnnotationHub() q &lt;- query(hub, &quot;Cricetulus&quot;) id &lt;- q$ah_id[length(q)] Cgriseus &lt;- hub[[id]] If an organism is not supported by AnnotationHub, user can use the AnnotationForge package to build OrgDb manually. Once we have OrgDb, we can build annotation data needed by GOSemSim via godata() function described previously. 2.3 GO semantic similarity measurement The goSim() function calculates semantic similarity between two GO terms, while the mgoSim() function calculates semantic similarity between two sets of GO terms. goSim(&quot;GO:0004022&quot;, &quot;GO:0005515&quot;, semData=hsGO, measure=&quot;Jiang&quot;) ## [1] 0.16 goSim(&quot;GO:0004022&quot;, &quot;GO:0005515&quot;, semData=hsGO, measure=&quot;Wang&quot;) ## [1] 0.116 go1 = c(&quot;GO:0004022&quot;,&quot;GO:0004024&quot;,&quot;GO:0004174&quot;) go2 = c(&quot;GO:0009055&quot;,&quot;GO:0005515&quot;) mgoSim(go1, go2, semData=hsGO, measure=&quot;Wang&quot;, combine=NULL) ## GO:0009055 GO:0005515 ## GO:0004022 0.368 0.116 ## GO:0004024 0.335 0.107 ## GO:0004174 0.663 0.119 mgoSim(go1, go2, semData=hsGO, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## [1] 0.43 2.4 Gene semantic similarity measurement On the basis of semantic similarity between GO terms, GOSemSim can also compute semantic similarity among sets of GO terms, gene products, and gene clusters. Suppose we have gene \\(g_1\\) annotated by GO terms sets \\(GO_{1}=\\{go_{11},go_{12} \\cdots go_{1m}\\}\\) and \\(g_2\\) annotated by \\(GO_{2}=\\{go_{21},go_{22} \\cdots go_{2n}\\}\\), GOSemSim implemented four combine methods, including max, avg, rcmax, and BMA, to aggregate semantic similarity scores of multiple GO terms (see also session 1.3). The similarities among gene products and gene clusters which annotated by multiple GO terms are also calculated by the these combine methods. GOSemSim provides geneSim() to calculate semantic similarity between two gene products, and mgeneSim() to calculate semantic similarity among multiple gene products. geneSim(&quot;241&quot;, &quot;251&quot;, semData=hsGO, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## $geneSim ## [1] 0.149 ## ## $GO1 ## [1] &quot;GO:0004364&quot; &quot;GO:0004464&quot; &quot;GO:0004602&quot; &quot;GO:0005515&quot; &quot;GO:0047485&quot; ## [6] &quot;GO:0050544&quot; ## ## $GO2 ## [1] &quot;GO:0004035&quot; mgeneSim(genes=c(&quot;835&quot;, &quot;5261&quot;,&quot;241&quot;, &quot;994&quot;), semData=hsGO, measure=&quot;Wang&quot;,verbose=FALSE) ## 835 5261 241 994 ## 835 1.000 0.465 0.448 0.562 ## 5261 0.465 1.000 0.433 0.499 ## 241 0.448 0.433 1.000 0.452 ## 994 0.562 0.499 0.452 1.000 mgeneSim(genes=c(&quot;835&quot;, &quot;5261&quot;,&quot;241&quot;, &quot;994&quot;), semData=hsGO, measure=&quot;Rel&quot;,verbose=FALSE) ## 835 5261 241 994 ## 835 0.945 0.413 0.257 0.482 ## 5261 0.413 0.907 0.332 0.473 ## 241 0.257 0.332 0.940 0.274 ## 994 0.482 0.473 0.274 0.906 By default, godata function use ENTREZID as keytype, and the input ID type is ENTREZID. User can use other ID types such as ENSEMBL, UNIPROT, REFSEQ, ACCNUM, SYMBOL et al. Here as an example, we use SYMBOL as keytype and calculate semantic similarities among several genes by using their gene symbol as input. hsGO2 &lt;- godata(&#39;org.Hs.eg.db&#39;, keytype = &quot;SYMBOL&quot;, ont=&quot;MF&quot;, computeIC=FALSE) genes &lt;- c(&quot;CDC45&quot;, &quot;MCM10&quot;, &quot;CDC20&quot;, &quot;NMU&quot;, &quot;MMP1&quot;) mgeneSim(genes, semData=hsGO2, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;, verbose=FALSE) ## CDC45 MCM10 CDC20 NMU MMP1 ## CDC45 1.000 0.892 0.578 0.592 0.113 ## MCM10 0.892 1.000 0.574 0.587 0.105 ## CDC20 0.578 0.574 1.000 0.640 0.117 ## NMU 0.592 0.587 0.640 1.000 0.104 ## MMP1 0.113 0.105 0.117 0.104 1.000 Users can also use clusterProfiler::bitr to translate biological IDs. 2.5 Gene cluster semantic similarity measurement GOSemSim also supports calculating semantic similarity between two gene clusters using clusterSim() function and measuring semantic similarity among multiple gene clusters using mclusterSim() function. gs1 &lt;- c(&quot;835&quot;, &quot;5261&quot;,&quot;241&quot;, &quot;994&quot;, &quot;514&quot;, &quot;533&quot;) gs2 &lt;- c(&quot;578&quot;,&quot;582&quot;, &quot;400&quot;, &quot;409&quot;, &quot;411&quot;) clusterSim(gs1, gs2, semData=hsGO, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## [1] 0.609 library(org.Hs.eg.db) x &lt;- org.Hs.egGO hsEG &lt;- mappedkeys(x) set.seed &lt;- 123 clusters &lt;- list(a=sample(hsEG, 20), b=sample(hsEG, 20), c=sample(hsEG, 20)) mclusterSim(clusters, semData=hsGO, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## a b c ## a 1.000 0.720 0.722 ## b 0.720 1.000 0.709 ## c 0.722 0.709 1.000 Chapter 3 DO semantic similarity analysis Public health is an important driving force behind biological and medical research. A major challenge of the post-genomic era is bridging the gap between fundamental biological research and its clinical applications. Recent research has increasingly demonstrated that many seemingly dissimilar diseases have common molecular mechanisms. Understanding similarities among disease aids in early diagnosis and new drug development. Formal knowledge representation of gene-disease association is demanded for this purpose. Ontologies, such as Gene Ontology (GO), have been successfully applied to represent biological knowledge, and many related techniques have been adopted to extract information. Disease Ontology (DO) (Schriml et al. 2011) was developed to create a consistent description of gene products with disease perspectives, and is essential for supporting functional genomics in disease context. Accurate disease descriptions can discover new relationships between genes and disease, and new functions for previous uncharacteried genes and alleles. Disease Ontology (DO) (Schriml et al. 2011) aims to provide an open source ontology for the integration of biomedical data that is associated with human disease. Unlike other clinical vocabularies that defined disease related concepts disparately, DO is organized as a directed acyclic graph, laying the foundation for quantitative computation of disease knowledge. We developed an R package DOSE (Yu et al. 2015) for analyzing semantic similarities among DO terms and gene products annotated with DO terms. 3.1 DO term semantic similarity measurement Four methods determine the semantic similarity of two terms based on the Information Content of their common ancestor term were proposed by Resnik (Philip 1999), Jiang (Jiang and Conrath 1997), Lin (Lin 1998) and Schlicker (Schlicker et al. 2006). Wang (Wang et al. 2007) presented a method to measure the similarity based on the graph structure. Each of these methods has its own advantage and weakness. DOSE supports all these methods to compute semantic similarity among DO terms and gene products. For algorithm details, please refer to chapter 1. In DOSE, we implemented doSim for calculating semantic similarity between two DO terms and two set of DO terms. library(DOSE) a &lt;- c(&quot;DOID:14095&quot;, &quot;DOID:5844&quot;, &quot;DOID:2044&quot;, &quot;DOID:8432&quot;, &quot;DOID:9146&quot;, &quot;DOID:10588&quot;, &quot;DOID:3209&quot;, &quot;DOID:848&quot;, &quot;DOID:3341&quot;, &quot;DOID:252&quot;) b &lt;- c(&quot;DOID:9409&quot;, &quot;DOID:2491&quot;, &quot;DOID:4467&quot;, &quot;DOID:3498&quot;, &quot;DOID:11256&quot;) doSim(a[1], b[1], measure=&quot;Wang&quot;) ## [1] 0.07142995 doSim(a[1], b[1], measure=&quot;Resnik&quot;) ## [1] 0 doSim(a[1], b[1], measure=&quot;Lin&quot;) ## [1] 0 s &lt;- doSim(a, b, measure=&quot;Wang&quot;) s ## DOID:9409 DOID:2491 DOID:4467 DOID:3498 DOID:11256 ## DOID:14095 0.07142995 0.05714393 0.03676194 0.03676194 0.52749870 ## DOID:5844 0.14897652 0.11564838 0.02801328 0.02801328 0.06134327 ## DOID:2044 0.14897652 0.11564838 0.02801328 0.02801328 0.06134327 ## DOID:8432 0.17347273 0.13877811 0.03676194 0.03676194 0.07142995 ## DOID:9146 0.07142995 0.05714393 0.03676194 0.03676194 0.17347273 ## DOID:10588 0.13240905 0.18401515 0.02208240 0.02208240 0.05452137 ## DOID:3209 0.14897652 0.11564838 0.02801328 0.02801328 0.06134327 ## DOID:848 0.14897652 0.11564838 0.02801328 0.02801328 0.06134327 ## DOID:3341 0.13240905 0.09998997 0.02208240 0.02208240 0.05452137 ## DOID:252 0.06134327 0.04761992 0.02801328 0.02801328 0.06134327 The doSim function requires three parameter DOID1, DOID2 and measure. DOID1 and DOID2 should be a vector of DO terms, while measure should be one of Resnik, Jiang, Lin, Rel, and Wang. We also implement a plot function simplot() to visualize the similarity result as demonstrated in Figure 3.1. simplot(s, color.low=&quot;white&quot;, color.high=&quot;red&quot;, labs=TRUE, digits=2, labs.size=5, font.size=14, xlab=&quot;&quot;, ylab=&quot;&quot;) Figure 3.1: Similarity matrix visualization. The simplot() function visualize similarity matrix as a heatmap. Parameter color.low and colow.high are used to setting the color gradient; labs is a logical parameter indicating whether to show the similarity values or not, digits to indicate the number of decimal places to be used and labs.size control the font size of similarity values; font.size setting the font size of axis and label of the coordinate system. 3.2 Gene semantic similarity measurement On the basis of semantic similarity between DO terms, DOSE can also compute semantic similarity among gene products. DOSE provides four methods which called max, avg, rcmax and BMA to combine semantic similarity scores of multiple DO terms (as described in session 1.3). The similarities among genes and gene clusters which annotated by multiple DO terms were also calculated by these combine methods. DOSE implemented geneSim to measure semantic similarities among genes. g1 &lt;- c(&quot;84842&quot;, &quot;2524&quot;, &quot;10590&quot;, &quot;3070&quot;, &quot;91746&quot;) g2 &lt;- c(&quot;84289&quot;, &quot;6045&quot;, &quot;56999&quot;, &quot;9869&quot;) geneSim(g1[1], g2[1], measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## [1] 0.051 gs &lt;- geneSim(g1, g2, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) gs ## 84289 6045 56999 9869 ## 84842 0.051 0.135 0.355 0.103 ## 2524 0.284 0.172 0.517 0.517 ## 10590 0.150 0.173 0.242 0.262 ## 3070 0.573 0.517 1.000 1.000 ## 91746 0.351 0.308 0.527 0.496 The geneSim requires four parameter geneID1, geneID2, measure and combine. geneID1 and geneID2 should be a vector of entrez gene IDs; measure should be one of Resnik, Jiang, Lin, Rel, and Wang, while combine should be one of max, avg, rcmax and BMA. 3.3 Gene cluster semantic similarity measurement DOSE also implemented clusterSim for calculating semantic similarity between two gene clusters and mclusterSim for calculating semantic similarities among multiple gene clusters. clusterSim(g1, g2, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## [1] 0.549 g3 &lt;- c(&quot;57491&quot;, &quot;6296&quot;, &quot;51438&quot;, &quot;5504&quot;, &quot;27319&quot;, &quot;1643&quot;) clusters &lt;- list(a=g1, b=g2, c=g3) mclusterSim(clusters, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## a b c ## a 1.000 0.549 0.425 ## b 0.549 1.000 0.645 ## c 0.425 0.645 1.000 Chapter 4 MeSH semantic similarity analysis MeSH (Medical Subject Headings) is the NLM (U.S. National Library of Medicine) controlled vocabulary used to manually index articles for MEDLINE/PubMed. MeSH is a comprehensive life science vocabulary. MeSH has 19 categories and MeSH.db contains 16 of them. That is: Abbreviation Category A Anatomy B Organisms C Diseases D Chemicals and Drugs E Analytical, Diagnostic and Therapeutic Techniques and Equipment F Psychiatry and Psychology G Phenomena and Processes H Disciplines and Occupations I Anthropology, Education, Sociology and Social Phenomena J Technology and Food and Beverages K Humanities L Information Science M Persons N Health Care V Publication Type Z Geographical Locations MeSH terms were associated with Entrez Gene ID by three methods, gendoo, gene2pubmed and RBBH (Reciprocal Blast Best Hit). Method Way of corresponding Entrez Gene IDs and MeSH IDs Gendoo Text-mining gene2pubmed Manual curation by NCBI teams RBBH sequence homology with BLASTP search (E-value&lt;10-50) 4.1 Supported organisms The meshes package (Yu 2018) relies on MeSHDb to prepare semantic data for measuring simiarlity. A list of MeSHDb can be found on Bioconductor, https://bioconductor.org/packages/release/BiocViews.html#___MeSHDb and all the species (more than 70) that have MeSHDb available are supported by the meshes package. The semantic data is prepare by the meshdata() function: library(meshes) hsamd &lt;- meshdata(&quot;MeSH.Hsa.eg.db&quot;, category=&#39;A&#39;, computeIC=T, database=&quot;gendoo&quot;) ## you may want to save the result for future usage # # save(hsamd, file = &quot;hsamd.rda&quot;) # 4.2 MeSH semantic similarity measurement The meshes package (Yu 2018) implemented four IC-based methods (i.e.¬†Resnik (Philip 1999), Jiang (Jiang and Conrath 1997), Lin (Lin 1998) and Schlicker (Schlicker et al. 2006)) and one graph-structure based method (i.e.¬†Wang (Wang et al. 2007)), to measure MeSH term semantic similarity. For algorithm details, please refer to Chapter 1. The meshSim() function is designed to measure semantic similarity between two MeSH term vectors. meshSim(&quot;D000009&quot;, &quot;D009130&quot;, semData=hsamd, measure=&quot;Resnik&quot;) ## [1] 0.2910261 meshSim(&quot;D000009&quot;, &quot;D009130&quot;, semData=hsamd, measure=&quot;Rel&quot;) ## [1] 0.521396 meshSim(&quot;D000009&quot;, &quot;D009130&quot;, semData=hsamd, measure=&quot;Jiang&quot;) ## [1] 0.4914785 meshSim(&quot;D000009&quot;, &quot;D009130&quot;, semData=hsamd, measure=&quot;Wang&quot;) ## [1] 0.5557103 meshSim(c(&quot;D001369&quot;, &quot;D002462&quot;), c(&quot;D017629&quot;, &quot;D002890&quot;, &quot;D008928&quot;), semData=hsamd, measure=&quot;Wang&quot;) ## D017629 D002890 D008928 ## D001369 0.2886598 0.1923711 0.2193326 ## D002462 0.6521739 0.2381925 0.2809552 4.3 Gene semantic similarity measurement The geneSim() function is designed to measure semantic similarity among two gene vectors. geneSim(&quot;241&quot;, &quot;251&quot;, semData=hsamd, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## [1] 0.487 geneSim(c(&quot;241&quot;, &quot;251&quot;), c(&quot;835&quot;, &quot;5261&quot;,&quot;241&quot;, &quot;994&quot;), semData=hsamd, measure=&quot;Wang&quot;, combine=&quot;BMA&quot;) ## 835 5261 241 994 ## 241 0.732 0.337 1.000 0.438 ## 251 0.526 0.588 0.487 0.597 Chapter 5 Overview of enrichment analysis 5.1 Terminology 5.1.1 Gene sets and pathway A gene set is an unordered collection of genes that are functional related. A pathway can be interpreted as a gene set by ignoring functional relationships among genes. 5.1.2 Gene Ontology (GO) Gene Ontology defines concepts/classes used to describe gene function, and relationships between these concepts. It classifies functions along three aspects: MF: Molecular Function molecular activities of gene products CC: Cellular Component where gene products are active BP: Biological Process pathways and larger processes made up of the activities of multiple gene products GO terms are organized in a directed acyclic graph, where edge between the terms represent parent-child relationship. 5.1.3 Kyoto Encyclopedia of Genes and Genomes (KEGG) KEGG is a collection of manually drawn pathway maps representing molecular interaction and reaction networks. These pathways cover a wide range of biochemical processes that can be divided in 7 broad categories: Metabolism Genetic information processing Environmental information processing Cellular processes Organismal systems Human diseases Drug development. 5.1.4 Other gene sets GO and KEGG are most frequently used for the functional analysis. They are typically the first choice because their long-standing curation and availability for a wide range of species. Other gene sets including but not limited to Disease Ontology (DO), Disease Gene Network (DisGeNET), wikiPathways, Molecular Signatures Database (MSigDb). 5.2 Over Representation Analysis Over Representation Analysis (ORA) (Boyle et al. 2004) is a widely used approach to determine whether known biological functions or processes are over-represented (= enriched) in an experimentally-derived gene list, e.g. a list of differentially expressed genes (DEGs). The p-value can be calculated by hypergeometric distribution. \\(p = 1 - \\displaystyle\\sum_{i = 0}^{k-1}\\frac{{M \\choose i}{{N-M} \\choose {n-i}}} {{N \\choose n}}\\) In this equation, N is the total number of genes in the background distribution, M is the number of genes within that distribution that are annotated (either directly or indirectly) to the gene set of interest, n is the size of the list of genes of interest and k is the number of genes within that list which are annotated to the gene set. The background distribution by default is all the genes that have annotation. P-values should be adjusted for multiple comparison. Example: Suppose we have 17,980 genes detected in a Microarray study and 57 genes were differentially expressed. Among the differential expressed genes, 28 are annotated to a gene set1. d &lt;- data.frame(gene.not.interest=c(2613, 15310), gene.in.interest=c(28, 29)) row.names(d) &lt;- c(&quot;In_category&quot;, &quot;not_in_category&quot;) d ## gene.not.interest gene.in.interest ## In_category 2613 28 ## not_in_category 15310 29 whether the overlap of 25 genes are significantly over represented in the gene set can be assessed using hypergeometric distribution. This corresponding to a one-sided version of Fisher‚Äôs exact test. fisher.test(d, alternative = &quot;greater&quot;) ## ## Fisher&#39;s Exact Test for Count Data ## ## data: d ## p-value = 1 ## alternative hypothesis: true odds ratio is greater than 1 ## 95 percent confidence interval: ## 0.110242 Inf ## sample estimates: ## odds ratio ## 0.1767937 5.3 Gene Set Enrichment Analysis A common approach in analyzing gene expression profiles was identifying differential expressed genes that are deemed interesting. The ORA enrichment analysis is based on these differential expressed genes. This approach will find genes where the difference is large, but it will not detect a situation where the difference is small, but evidenced in coordinated way in a set of related genes. Gene Set Enrichment Analysis (GSEA)(Subramanian et al. 2005) directly addresses this limitation. All genes can be used in GSEA; GSEA aggregates the per gene statistics across genes within a gene set, therefore making it possible to detect situations where all genes in a predefined set change in a small but coordinated way. Since it is likely that many relevant phenotypic differences are manifested by small but consistent changes in a set of genes. Genes are ranked based on their phenotypes. Given a priori defined set of gene S (e.g., genes shareing the same DO category), the goal of GSEA is to determine whether the members of S are randomly distributed throughout the ranked gene list (L) or primarily found at the top or bottom. There are three key elements of the GSEA method: Calculation of an Enrichment Score. The enrichment score (ES) represent the degree to which a set S is over-represented at the top or bottom of the ranked list L. The score is calculated by walking down the list L, increasing a running-sum statistic when we encounter a gene in S and decreasing when it is not. The magnitude of the increment depends on the gene statistics (e.g., correlation of the gene with phenotype). The ES is the maximum deviation from zero encountered in the random walk; it corresponds to a weighted Kolmogorov-Smirnov-like statistic (Subramanian et al. 2005). Esimation of Significance Level of ES. The p-value of the ES is calculated using permutation test. Specifically, we permute the gene labels of the gene list L and recompute the ES of the gene set for the permutated data, which generate a null distribution for the ES. The p-value of the observed ES is then calculated relative to this null distribution. Adjustment for Multiple Hypothesis Testing. When the entire gene sets were evaluated, the estimated significance level was adjusted to account for multiple hypothesis testing and also q-values were calculated for FDR control. We implemented GSEA algorithm proposed by Subramanian (Subramanian et al. 2005). Alexey Sergushichev implemented an algorithm for fast GSEA calculation in the fgsea (Korotkevich, Sukhov, and Sergushichev 2019) package. In our packages (clusterProfiler, DOSE, meshes and ReactomePA), users can use GSEA algorithm implemented in DOSE or fgsea by specifying the parameter by=\"DOSE\" or by=\"fgsea\". By default, the fgsea method will be used since it is much more faster. 5.4 Leading edge analysis and core enriched genes Leading edge analysis reports Tags to indicate the percentage of genes contributing to the enrichment score, List to indicate where in the list the enrichment score is attained and Signal for enrichment signal strength. It would also be very interesting to get the core enriched genes that contribute to the enrichment. Our packages (clusterProfiler, DOSE, meshes and ReactomePA) support leading edge analysis and report core enriched genes in GSEA analysis. Chapter 6 GO enrichment analysis GO comprises of three orthogonal ontologies, i.e.¬†molecular function (MF), biological process (BP), and cellular component (CC). 6.1 Supported organisms GO analyses (groupGO(), enrichGO() and gseGO()) support organisms that have an OrgDb object available (see also session 2.2). If user have GO annotation data (in data.frame format with first column of gene ID and second column of GO ID), they can use enricher() and gseGO() functions to perform over-representation test and gene set enrichment analysis. If genes are annotated by direction annotation, it should also annotated by its ancestor GO nodes (indirect annation). If user only has direct annotation, they can pass their annotation to buildGOmap function, which will infer indirection annotation and generate a data.frame that suitable for both enricher() and gseGO(). 6.2 GO classification In clusterProfiler, the groupGO() is designed for gene classification based on GO distribution at a specific level. Here we use the dataset geneList provided by DOSE. library(clusterProfiler) data(geneList, package=&quot;DOSE&quot;) gene &lt;- names(geneList)[abs(geneList) &gt; 2] # Entrez gene ID head(gene) ## [1] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; ggo &lt;- groupGO(gene = gene, OrgDb = org.Hs.eg.db, ont = &quot;CC&quot;, level = 3, readable = TRUE) head(ggo) ## ID Description Count ## GO:0000131 GO:0000131 incipient cellular bud site 0 ## GO:0000151 GO:0000151 ubiquitin ligase complex 4 ## GO:0000159 GO:0000159 protein phosphatase type 2A complex 0 ## GO:0000178 GO:0000178 exosome (RNase complex) 0 ## GO:0000307 GO:0000307 cyclin-dependent protein kinase holoenzyme complex 4 ## GO:0000408 GO:0000408 EKC/KEOPS complex 0 ## GeneRatio geneID ## GO:0000131 0/207 ## GO:0000151 4/207 CDC20/UBE2C/UBE2S/DTL ## GO:0000159 0/207 ## GO:0000178 0/207 ## GO:0000307 4/207 CCNB2/CCNA2/CDK1/CCNB1 ## GO:0000408 0/207 The gene parameter is a vector of gene IDs (can be any ID type that supported by corresponding OrgDb, see also session 16.1). If readable is set to TRUE, the input gene IDs will be converted to gene symbols. 6.3 GO over-representation analysis The clusterProfiler package implemented enrichGO() function for gene ontology over-representation test. ego &lt;- enrichGO(gene = gene, universe = names(geneList), OrgDb = org.Hs.eg.db, ont = &quot;CC&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05, readable = TRUE) head(ego) ## ID Description GeneRatio ## GO:0005819 GO:0005819 spindle 25/201 ## GO:0072686 GO:0072686 mitotic spindle 16/201 ## GO:0005876 GO:0005876 spindle microtubule 12/201 ## GO:0000779 GO:0000779 condensed chromosome, centromeric region 15/201 ## GO:0000775 GO:0000775 chromosome, centromeric region 18/201 ## GO:0000776 GO:0000776 kinetochore 15/201 ## BgRatio pvalue p.adjust qvalue ## GO:0005819 288/11841 1.770094e-11 4.167650e-09 3.831313e-09 ## GO:0072686 110/11841 4.495145e-11 4.167650e-09 3.831313e-09 ## GO:0005876 52/11841 4.691637e-11 4.167650e-09 3.831313e-09 ## GO:0000779 95/11841 5.556867e-11 4.167650e-09 3.831313e-09 ## GO:0000775 158/11841 1.712374e-10 1.027424e-08 9.445095e-09 ## GO:0000776 109/11841 4.151093e-10 1.841211e-08 1.692622e-08 ## geneID ## GO:0005819 CDCA8/CDC20/KIF23/CENPE/ASPM/DLGAP5/SKA1/NUSAP1/TPX2/TACC3/NEK2/CDK1/MAD2L1/KIF18A/BIRC5/KIF11/TTK/AURKB/PRC1/KIFC1/KIF18B/KIF20A/AURKA/CCNB1/KIF4A ## GO:0072686 KIF23/CENPE/ASPM/SKA1/NUSAP1/TPX2/TACC3/CDK1/MAD2L1/KIF18A/KIF11/AURKB/PRC1/KIFC1/KIF18B/AURKA ## GO:0005876 CENPE/SKA1/NUSAP1/CDK1/KIF18A/BIRC5/KIF11/AURKB/PRC1/KIF18B/AURKA/KIF4A ## GO:0000779 CENPE/NDC80/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/CDT1/BIRC5/NCAPG/AURKB/AURKA/CCNB1 ## GO:0000775 CDCA8/CENPE/NDC80/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/KIF18A/CDT1/BIRC5/TTK/NCAPG/AURKB/AURKA/CCNB1 ## GO:0000776 CENPE/NDC80/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/KIF18A/CDT1/BIRC5/TTK/AURKB/CCNB1 ## Count ## GO:0005819 25 ## GO:0072686 16 ## GO:0005876 12 ## GO:0000779 15 ## GO:0000775 18 ## GO:0000776 15 Any gene ID type that supported in OrgDb can be directly used in GO analyses. User need to specify the keyType parameter to specify the input gene ID type. gene.df &lt;- bitr(gene, fromType = &quot;ENTREZID&quot;, toType = c(&quot;ENSEMBL&quot;, &quot;SYMBOL&quot;), OrgDb = org.Hs.eg.db) ego2 &lt;- enrichGO(gene = gene.df$ENSEMBL, OrgDb = org.Hs.eg.db, keyType = &#39;ENSEMBL&#39;, ont = &quot;CC&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) head(ego2, 3) ## ID Description GeneRatio BgRatio pvalue ## GO:0072686 GO:0072686 mitotic spindle 20/233 149/21872 1.456640e-16 ## GO:0005819 GO:0005819 spindle 29/233 395/21872 2.896081e-16 ## GO:0005876 GO:0005876 spindle microtubule 13/233 68/21872 3.039661e-13 ## p.adjust qvalue ## GO:0072686 4.213799e-14 3.200932e-14 ## GO:0005819 4.213799e-14 3.200932e-14 ## GO:0005876 2.948471e-11 2.239750e-11 ## geneID ## GO:0072686 ENSG00000137807/ENSG00000138778/ENSG00000066279/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000088325/ENSG00000013810/ENSG00000170312/ENSG00000164109/ENSG00000121621/ENSG00000138160/ENSG00000178999/ENSG00000198901/ENSG00000237649/ENSG00000056678/ENSG00000204197/ENSG00000233450/ENSG00000186185/ENSG00000087586 ## GO:0005819 ENSG00000134690/ENSG00000117399/ENSG00000137807/ENSG00000138778/ENSG00000066279/ENSG00000126787/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000088325/ENSG00000013810/ENSG00000117650/ENSG00000170312/ENSG00000164109/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000112742/ENSG00000178999/ENSG00000198901/ENSG00000237649/ENSG00000056678/ENSG00000204197/ENSG00000233450/ENSG00000186185/ENSG00000112984/ENSG00000087586/ENSG00000134057/ENSG00000090889 ## GO:0005876 ENSG00000138778/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000170312/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000178999/ENSG00000198901/ENSG00000186185/ENSG00000087586/ENSG00000090889 ## Count ## GO:0072686 20 ## GO:0005819 29 ## GO:0005876 13 Gene ID can be mapped to gene Symbol by using paramter readable=TRUE or setReadable() function. 6.4 GO Gene Set Enrichment Analysis The clusterProfiler package provides gseGO() function for gene set enrichment analysis using gene ontology. ego3 &lt;- gseGO(geneList = geneList, OrgDb = org.Hs.eg.db, ont = &quot;CC&quot;, minGSSize = 100, maxGSSize = 500, pvalueCutoff = 0.05, verbose = FALSE) The format of input data, geneList, was documented in the FAQ. Beware that only gene Set size in [minGSSize, maxGSSize] will be tested. 6.5 GO analysis for non-model organisms Both enrichGO() and gseGO() functions require an OrgDb object as background annotation. For organisms that don‚Äôt have OrgDb provided by Bioconductor, users can query one (if available) online via AnnotationHub. If there is no OrgDb available, users can obtain GO annotation from other sources, e.g.¬†from biomaRt or Blast2GO. Then the enricher() or GSEA() functions can be used to perform GO analysis for these organisms, similar to the examples using wikiPathways and MSigDB. Another solution is to create OrgDb by your own using AnnotationForge package. 6.6 Visualize enriched GO terms as a directed acyclic graph The goplot() can accept output of enrichGO and visualized the enriched GO induced graph. goplot(ego) Figure 6.1: Goplot of enrichment analysis. 6.7 Summary GO semantic similarity can be calculated by GOSemSim (Yu et al. 2010). We can use it to cluster genes/proteins into different clusters based on their functional similarity and can also use it to measure the similarities among GO terms to reduce the redundancy of GO enrichment results. Chapter 7 KEGG enrichment analysis The KEGG FTP service is not freely available for academic since 2012, and there are many software packages using out-dated KEGG annotation data. The clusterProfiler package supports downloading latest online version of KEGG data using the KEGG website, which is freely available for academic users. Both KEGG pathway and module are supported in clusterProfiler. 7.1 Supported organisms The clusterProfiler package supports all organisms that have KEGG annotation data available in KEGG database. User should pass abbreviation of academic name to the organism parameter. The full list of KEGG supported organisms can be accessed via http://www.genome.jp/kegg/catalog/org_list.html. KEGG Orthology (KO) Database is also supported by specifying organism = \"ko\". The clusterProfiler package provides search_kegg_organism() function to help searching supported organisms. library(clusterProfiler) search_kegg_organism(&#39;ece&#39;, by=&#39;kegg_code&#39;) ## kegg_code scientific_name common_name ## 366 ece Escherichia coli O157:H7 EDL933 (EHEC) &lt;NA&gt; ecoli &lt;- search_kegg_organism(&#39;Escherichia coli&#39;, by=&#39;scientific_name&#39;) dim(ecoli) ## [1] 65 3 head(ecoli) ## kegg_code scientific_name common_name ## 361 eco Escherichia coli K-12 MG1655 &lt;NA&gt; ## 362 ecj Escherichia coli K-12 W3110 &lt;NA&gt; ## 363 ecd Escherichia coli K-12 DH10B &lt;NA&gt; ## 364 ebw Escherichia coli BW2952 &lt;NA&gt; ## 365 ecok Escherichia coli K-12 MDS42 &lt;NA&gt; ## 366 ece Escherichia coli O157:H7 EDL933 (EHEC) &lt;NA&gt; 7.2 KEGG pathway over-representation analysis data(geneList, package=&quot;DOSE&quot;) gene &lt;- names(geneList)[abs(geneList) &gt; 2] kk &lt;- enrichKEGG(gene = gene, organism = &#39;hsa&#39;, pvalueCutoff = 0.05) head(kk) ## ID Description ## hsa04110 hsa04110 Cell cycle ## hsa04114 hsa04114 Oocyte meiosis ## hsa04218 hsa04218 Cellular senescence ## hsa04061 hsa04061 Viral protein interaction with cytokine and cytokine receptor ## hsa03320 hsa03320 PPAR signaling pathway ## hsa04914 hsa04914 Progesterone-mediated oocyte maturation ## GeneRatio BgRatio pvalue p.adjust qvalue ## hsa04110 11/95 124/8087 1.853094e-07 3.817373e-05 0.0000374520 ## hsa04114 10/95 129/8087 2.409878e-06 2.482174e-04 0.0002435245 ## hsa04218 10/95 156/8087 1.323532e-05 9.088250e-04 0.0008916423 ## hsa04061 8/95 100/8087 2.066338e-05 1.064164e-03 0.0010440443 ## hsa03320 7/95 76/8087 2.790313e-05 1.149609e-03 0.0011278737 ## hsa04914 7/95 100/8087 1.625327e-04 5.580289e-03 0.0054747850 ## geneID Count ## hsa04110 8318/991/9133/890/983/4085/7272/1111/891/4174/9232 11 ## hsa04114 991/9133/983/4085/51806/6790/891/9232/3708/5241 10 ## hsa04218 2305/4605/9133/890/983/51806/1111/891/776/3708 10 ## hsa04061 3627/10563/6373/4283/6362/6355/9547/1524 8 ## hsa03320 4312/9415/9370/5105/2167/3158/5346 7 ## hsa04914 9133/890/983/4085/6790/891/5241 7 Input ID type can be kegg, ncbi-geneid, ncbi-proteinid or uniprot (see also session 16.1.2). Unlike enrichGO(), there is no readable parameter for enrichKEGG(). However, users can use the setReadable() function if there is an OrgDb available for the species. 7.3 KEGG pathway gene set enrichment analysis kk2 &lt;- gseKEGG(geneList = geneList, organism = &#39;hsa&#39;, minGSSize = 120, pvalueCutoff = 0.05, verbose = FALSE) head(kk2) ## ID Description setSize ## hsa05169 hsa05169 Epstein-Barr virus infection 193 ## hsa04613 hsa04613 Neutrophil extracellular trap formation 130 ## hsa05166 hsa05166 Human T-cell leukemia virus 1 infection 200 ## hsa04218 hsa04218 Cellular senescence 141 ## hsa04510 hsa04510 Focal adhesion 190 ## hsa03013 hsa03013 RNA transport 135 ## enrichmentScore NES pvalue p.adjust qvalues rank ## hsa05169 0.4335010 1.939504 1.689197e-07 1.233114e-05 8.890510e-06 2820 ## hsa04613 0.4496569 1.910343 3.594203e-06 1.311884e-04 9.458428e-05 2575 ## hsa05166 0.3926594 1.766423 8.756111e-06 2.130654e-04 1.536160e-04 1955 ## hsa04218 0.4115945 1.755570 6.112069e-05 9.133145e-04 6.584820e-04 1155 ## hsa04510 -0.4169068 -1.697998 6.255579e-05 9.133145e-04 6.584820e-04 2183 ## hsa03013 0.4103684 1.749128 1.240059e-04 1.256361e-03 9.058120e-04 3383 ## leading_edge ## hsa05169 tags=39%, list=23%, signal=31% ## hsa04613 tags=37%, list=21%, signal=30% ## hsa05166 tags=26%, list=16%, signal=23% ## hsa04218 tags=17%, list=9%, signal=16% ## hsa04510 tags=27%, list=17%, signal=22% ## hsa03013 tags=39%, list=27%, signal=29% ## core_enrichment ## hsa05169 3627/890/6890/9636/898/9134/6502/6772/3126/3112/4609/917/5709/1869/3654/919/915/4067/4938/864/4940/5713/5336/11047/3066/54205/1871/578/1019/637/916/3383/4939/10213/23586/4793/5603/7979/7128/6891/930/5714/3452/6850/5702/4794/7124/3569/7097/5708/2208/8772/3119/5704/7186/5971/3135/1380/958/5610/4792/10018/8819/3134/10379/9641/1147/5718/6300/3109/811/5606/2923/3108/5707/1432 ## hsa04613 820/366/51311/64581/3015/85236/55506/8970/8357/1535/2359/5336/4688/92815/3066/8336/292/1991/3689/8345/5603/4689/5880/10105/1184/6404/3018/6850/5604/3014/7097/1378/8290/1536/834/5605/1183/728/2215/8335/5594/9734/3674/5578/5582/7417/8331/6300 ## hsa05166 991/9133/890/4085/7850/1111/9232/8061/701/9700/898/4316/9134/3932/3559/3126/3112/4609/3561/917/1869/1029/915/114/2005/5902/55697/1871/1031/2224/292/1019/3689/916/3383/11200/706/3600/6513/3601/468/5604/7124/1030/3569/4049/4055/10393/3119/5901/5971/1959/3135 ## hsa04218 2305/4605/9133/890/983/51806/1111/891/993/3576/1978/898/9134/4609/1869/1029/22808/1871/5499/91860/292/1019/11200/1875 ## hsa04510 5595/5228/7424/1499/4636/83660/7059/5295/1288/23396/3910/3371/3082/1291/394/3791/7450/596/3685/1280/3675/595/2318/3912/1793/1278/1277/1293/10398/55742/2317/7058/25759/56034/3693/3480/5159/857/1292/3908/3909/63923/3913/1287/3679/7060/3479/10451/80310/1311/1101 ## hsa03013 10460/1978/55110/54913/9688/8894/11260/10799/9631/4116/5042/8761/6396/23165/8662/10248/55706/79833/9775/29107/23636/5905/9513/5901/10775/10557/4927/79902/1981/26986/11171/10762/8480/8891/11097/26019/55308/10940/4686/9972/81929/10556/3646/9470/387082/1977/57122/8563/7514/79023/3837/9818/56000 7.4 KEGG module over-representation analysis KEGG Module is a collection of manually defined function units. In some situation, KEGG Modules have a more straightforward interpretation. mkk &lt;- enrichMKEGG(gene = gene, organism = &#39;hsa&#39;, pvalueCutoff = 1, qvalueCutoff = 1) head(mkk) ## ID ## M00912 M00912 ## M00095 M00095 ## M00053 M00053 ## M00003 M00003 ## M00049 M00049 ## Description ## M00912 NAD biosynthesis, tryptophan =&gt; quinolinate =&gt; NAD ## M00095 C5 isoprenoid biosynthesis, mevalonate pathway ## M00053 Pyrimidine deoxyribonuleotide biosynthesis, CDP/CTP =&gt; dCDP/dCTP,dTDP/dTTP ## M00003 Gluconeogenesis, oxaloacetate =&gt; fructose-6P ## M00049 Adenine ribonucleotide biosynthesis, IMP =&gt; ADP,ATP ## GeneRatio BgRatio pvalue p.adjust qvalue geneID Count ## M00912 2/9 12/830 0.00652644 0.0326322 0.02747975 23475/3620 2 ## M00095 1/9 10/830 0.10382973 0.2156987 0.18164098 3158 1 ## M00053 1/9 14/830 0.14260060 0.2156987 0.18164098 6241 1 ## M00003 1/9 18/830 0.17987328 0.2156987 0.18164098 5105 1 ## M00049 1/9 22/830 0.21569867 0.2156987 0.18164098 26289 1 7.5 KEGG module gene set enrichment analysis mkk2 &lt;- gseMKEGG(geneList = geneList, organism = &#39;hsa&#39;, pvalueCutoff = 1) head(mkk2) ## ID ## M00001 M00001 ## M00035 M00035 ## M00002 M00002 ## M00053 M00053 ## M00104 M00104 ## M00009 M00009 ## Description ## M00001 Glycolysis (Embden-Meyerhof pathway), glucose =&gt; pyruvate ## M00035 Methionine degradation ## M00002 Glycolysis, core module involving three-carbon compounds ## M00053 Pyrimidine deoxyribonuleotide biosynthesis, CDP/CTP =&gt; dCDP/dCTP,dTDP/dTTP ## M00104 Bile acid biosynthesis, cholesterol =&gt; cholate/chenodeoxycholate ## M00009 Citrate cycle (TCA cycle, Krebs cycle) ## setSize enrichmentScore NES pvalue p.adjust qvalues rank ## M00001 24 0.5739036 1.711643 0.006803306 0.2058382 0.1895878 2886 ## M00035 10 0.6784636 1.613869 0.019936410 0.2058382 0.1895878 1555 ## M00002 11 0.6421781 1.584692 0.023577638 0.2058382 0.1895878 1381 ## M00053 10 0.6648004 1.581368 0.025729772 0.2058382 0.1895878 648 ## M00104 10 -0.5876900 -1.345261 0.122557726 0.7529412 0.6934985 961 ## M00009 22 0.4504911 1.324526 0.141176471 0.7529412 0.6934985 3514 ## leading_edge ## M00001 tags=54%, list=23%, signal=42% ## M00035 tags=50%, list=12%, signal=44% ## M00002 tags=55%, list=11%, signal=49% ## M00053 tags=40%, list=5%, signal=38% ## M00104 tags=50%, list=8%, signal=46% ## M00009 tags=50%, list=28%, signal=36% ## core_enrichment ## M00001 5214/3101/2821/7167/2597/5230/2023/5223/5315/3099/5232/2027/5211 ## M00035 875/1789/191/1788/1786 ## M00002 7167/2597/5230/2023/5223/5315 ## M00053 6241/7298/4830/1841 ## M00104 6342/10998/1581/3295/8309 ## M00009 3418/50/4190/3419/2271/3421/55753/3417/1431/6389/4191 7.6 Visualize enriched KEGG pathways The enrichplot package implemented several methods to visualize enriched terms. Most of them are general methods that can be used to GO, KEGG, MSigDb and other gene set annotations. Here, we introduce clusterProfiler::browseKEGG() and pathview::pathview() functions to help users exploring enriched KEGG pathway with interested genes. To view the KEGG pathway, user can use browseKEGG function, which will open web browser and highlight enriched genes. browseKEGG(kk, &#39;hsa04110&#39;) Figure 7.1: Explore selected KEGG pathway. Differentially expressed genes that enriched in the selected pathway will be highlighted. Users can also use the pathview() function from the pathview (Luo and Brouwer 2013) to visualize enriched KEGG pathways identify by the clusterProfiler package (Yu et al. 2012). The following example illustrate how to visualize ‚Äúhsa04110‚Äù pathway, which was enriched in our previous analysis. library(&quot;pathview&quot;) hsa04110 &lt;- pathview(gene.data = geneList, pathway.id = &quot;hsa04110&quot;, species = &quot;hsa&quot;, limit = list(gene=max(abs(geneList)), cpd=1)) Figure 7.2: Visualize selected KEGG pathway by pathview(). Gene expression values can be mapped to gradient color scale. Chapter 8 WikiPathways analysis WikiPathways is a continuously updated pathway database curated by a community of researchers and pathway enthusiasts. WikiPathways produces monthly releases of gmt files for supported organisms at data.wikipathways.org. The clusterProfiler package (Yu et al. 2012) supports enrichment analysis (either ORA or GSEA) for WikiPathways using the enrichWP() and gseWP() functions. These functions will automatically download and parse latest WikiPathways GMT file for selected organism. Supported organisms can be listed by: get_wp_organisms() ## [1] &quot;Equus caballus&quot; &quot;Populus trichocarpa&quot; ## [3] &quot;Sus scrofa&quot; &quot;Anopheles gambiae&quot; ## [5] &quot;Arabidopsis thaliana&quot; &quot;Bos taurus&quot; ## [7] &quot;Caenorhabditis elegans&quot; &quot;Canis familiaris&quot; ## [9] &quot;Danio rerio&quot; &quot;Drosophila melanogaster&quot; ## [11] &quot;Gallus gallus&quot; &quot;Homo sapiens&quot; ## [13] &quot;Mus musculus&quot; &quot;Oryza sativa&quot; ## [15] &quot;Pan troglodytes&quot; &quot;Rattus norvegicus&quot; ## [17] &quot;Saccharomyces cerevisiae&quot; 8.1 WikiPathways over-representation analysis data(geneList, package=&quot;DOSE&quot;) gene &lt;- names(geneList)[abs(geneList) &gt; 2] enrichWP(gene, organism = &quot;Homo sapiens&quot;) ## # ## # over-representation test ## # ## #...@organism Homo sapiens ## #...@ontology WikiPathways ## #...@keytype ENTREZID ## #...@gene chr [1:207] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; &quot;6280&quot; &quot;2305&quot; ... ## #...pvalues adjusted by &#39;BH&#39; with cutoff &lt;0.05 ## #...6 enriched terms found ## &#39;data.frame&#39;: 6 obs. of 9 variables: ## $ ID : chr &quot;WP2446&quot; &quot;WP2361&quot; &quot;WP179&quot; &quot;WP3942&quot; ... ## $ Description: chr &quot;Retinoblastoma Gene in Cancer&quot; &quot;Gastric Cancer Network 1&quot; &quot;Cell Cycle&quot; &quot;PPAR signaling pathway&quot; ... ## $ GeneRatio : chr &quot;11/105&quot; &quot;6/105&quot; &quot;10/105&quot; &quot;7/105&quot; ... ## $ BgRatio : chr &quot;90/7477&quot; &quot;29/7477&quot; &quot;120/7477&quot; &quot;67/7477&quot; ... ## $ pvalue : num 4.07e-08 2.43e-06 6.22e-06 3.84e-05 4.45e-05 ... ## $ p.adjust : num 8.96e-06 2.67e-04 4.56e-04 1.96e-03 1.96e-03 ... ## $ qvalue : num 8.19e-06 2.44e-04 4.17e-04 1.79e-03 1.79e-03 ... ## $ geneID : chr &quot;8318/9133/7153/6241/890/983/81620/7272/1111/891/24137&quot; &quot;4605/7153/11065/22974/6286/6790&quot; &quot;8318/991/9133/890/983/7272/1111/891/4174/9232&quot; &quot;4312/9415/9370/5105/2167/3158/5346&quot; ... ## $ Count : int 11 6 10 7 4 7 ## #...Citation ## Guangchuang Yu, Li-Gen Wang, Yanyan Han and Qing-Yu He. ## clusterProfiler: an R package for comparing biological themes among ## gene clusters. OMICS: A Journal of Integrative Biology ## 2012, 16(5):284-287 8.2 WikiPathways gene set enrichment analysis gseWP(geneList, organism = &quot;Homo sapiens&quot;) ## # ## # Gene Set Enrichment Analysis ## # ## #...@organism Homo sapiens ## #...@setType WikiPathways ## #...@keytype ENTREZID ## #...@geneList Named num [1:12495] 4.57 4.51 4.42 4.14 3.88 ... ## - attr(*, &quot;names&quot;)= chr [1:12495] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; ... ## #...nPerm ## #...pvalues adjusted by &#39;BH&#39; with cutoff &lt;0.05 ## #...59 enriched terms found ## &#39;data.frame&#39;: 59 obs. of 11 variables: ## $ ID : chr &quot;WP179&quot; &quot;WP2446&quot; &quot;WP466&quot; &quot;WP45&quot; ... ## $ Description : chr &quot;Cell Cycle&quot; &quot;Retinoblastoma Gene in Cancer&quot; &quot;DNA Replication&quot; &quot;G1 to S cell cycle control&quot; ... ## $ setSize : int 111 84 42 62 23 41 76 61 36 14 ... ## $ enrichmentScore: num 0.663 0.731 0.792 0.665 0.837 ... ## $ NES : num 2.74 2.84 2.73 2.48 2.5 ... ## $ pvalue : num 1.00e-10 1.00e-10 1.00e-10 2.93e-10 3.49e-09 ... ## $ p.adjust : num 1.69e-08 1.69e-08 1.69e-08 3.71e-08 3.54e-07 ... ## $ qvalues : num 1.42e-08 1.42e-08 1.42e-08 3.12e-08 2.97e-07 ... ## $ rank : num 1234 1333 1002 1111 854 ... ## $ leading_edge : chr &quot;tags=40%, list=10%, signal=36%&quot; &quot;tags=51%, list=11%, signal=46%&quot; &quot;tags=55%, list=8%, signal=51%&quot; &quot;tags=42%, list=9%, signal=38%&quot; ... ## $ core_enrichment: chr &quot;8318/991/9133/890/983/7272/1111/891/4174/9232/4171/993/990/5347/9700/898/23594/4998/9134/4175/4173/10926/6502/9&quot;| __truncated__ &quot;8318/9133/7153/6241/890/983/81620/7272/1111/891/24137/993/898/4998/10733/9134/4175/4173/6502/5984/994/7298/3015&quot;| __truncated__ &quot;8318/55388/81620/4174/4171/990/23594/4998/4175/4173/10926/5984/5111/51053/8317/5427/23649/4176/5982/5557/5558/4172/5424&quot; &quot;8318/983/891/4174/4171/993/898/23594/4998/9134/4175/4173/4609/5111/1869/1029/5427/23649/4176/5557/1871/1031/101&quot;| __truncated__ ... ## #...Citation ## Guangchuang Yu, Li-Gen Wang, Yanyan Han and Qing-Yu He. ## clusterProfiler: an R package for comparing biological themes among ## gene clusters. OMICS: A Journal of Integrative Biology ## 2012, 16(5):284-287 If your input gene ID type is not Entrez gene ID, you can use the bitr() function to convert gene ID. If you want to convert the gene IDs in output result to gene symbols, you can use the setReadable() function. Chapter 9 Reactome enrichment analysis ReactomePA is designed for reactome pathway based analysis (Yu and He 2016). Reactome is an open-source, open access, manually curated and peer-reviewed pathway database. 9.1 Supported organisms Currently ReactomePA supports several model organisms, including ‚Äòcelegans,‚Äô ‚Äòfly,‚Äô ‚Äòhuman,‚Äô ‚Äòmouse,‚Äô ‚Äòrat,‚Äô ‚Äòyeast‚Äô and ‚Äòzebrafish.‚Äô The input gene ID should be Entrez gene ID. We recommend using clusterProfiler::bitr() to convert biological IDs. 9.2 Reactome pathway over-representation analysis Enrichment analysis is a widely used approach to identify biological themes. ReactomePA implemented enrichPathway() that uses hypergeometric model to assess whether the number of selected genes associated with a reactome pathway is larger than expected. library(ReactomePA) data(geneList) de &lt;- names(geneList)[abs(geneList) &gt; 1.5] head(de) ## [1] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; x &lt;- enrichPathway(gene=de, pvalueCutoff = 0.05, readable=TRUE) head(x) ## ID ## R-HSA-69620 R-HSA-69620 ## R-HSA-69618 R-HSA-69618 ## R-HSA-2500257 R-HSA-2500257 ## R-HSA-141424 R-HSA-141424 ## R-HSA-141444 R-HSA-141444 ## R-HSA-9648025 R-HSA-9648025 ## Description ## R-HSA-69620 Cell Cycle Checkpoints ## R-HSA-69618 Mitotic Spindle Checkpoint ## R-HSA-2500257 Resolution of Sister Chromatid Cohesion ## R-HSA-141424 Amplification of signal from the kinetochores ## R-HSA-141444 Amplification of signal from unattached kinetochores via a MAD2 inhibitory signal ## R-HSA-9648025 EML4 and NUDC in mitotic spindle formation ## GeneRatio BgRatio pvalue p.adjust qvalue ## R-HSA-69620 38/326 294/10704 2.720718e-14 2.035097e-11 1.807129e-11 ## R-HSA-69618 22/326 113/10704 2.569512e-12 8.279535e-10 7.352078e-10 ## R-HSA-2500257 23/326 126/10704 3.320669e-12 8.279535e-10 7.352078e-10 ## R-HSA-141424 20/326 96/10704 6.983701e-12 1.044762e-09 9.277295e-10 ## R-HSA-141444 20/326 96/10704 6.983701e-12 1.044762e-09 9.277295e-10 ## R-HSA-9648025 20/326 117/10704 3.063131e-10 3.818703e-08 3.390939e-08 ## geneID ## R-HSA-69620 CDC45/CDCA8/MCM10/CDC20/CENPE/CCNB2/NDC80/UBE2C/SKA1/CENPM/CENPN/UBE2S/CCNA2/CDK1/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/CHEK1/CCNB1/MCM5/MCM2/KIF2C/CDC25A/CDC6/PLK1/BUB1B/GTSE1/EXO1/ZWINT/CENPU/SPC25/CENPI/CCNE1/ORC6/ORC1/TAOK1 ## R-HSA-69618 CDCA8/CDC20/CENPE/NDC80/UBE2C/SKA1/CENPM/CENPN/UBE2S/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/KIF2C/PLK1/BUB1B/ZWINT/CENPU/SPC25/CENPI/TAOK1 ## R-HSA-2500257 CDCA8/CDC20/CENPE/CCNB2/NDC80/SKA1/CENPM/CENPN/CDK1/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/CCNB1/KIF2C/PLK1/BUB1B/ZWINT/CENPU/SPC25/CENPI/TAOK1 ## R-HSA-141424 CDCA8/CDC20/CENPE/NDC80/SKA1/CENPM/CENPN/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/KIF2C/PLK1/BUB1B/ZWINT/CENPU/SPC25/CENPI/TAOK1 ## R-HSA-141444 CDCA8/CDC20/CENPE/NDC80/SKA1/CENPM/CENPN/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/KIF2C/PLK1/BUB1B/ZWINT/CENPU/SPC25/CENPI/TAOK1 ## R-HSA-9648025 CDCA8/CDC20/CENPE/NDC80/SKA1/CENPM/CENPN/ERCC6L/MAD2L1/KIF18A/BIRC5/AURKB/KIF2C/PLK1/BUB1B/ZWINT/CENPU/SPC25/CENPI/TAOK1 ## Count ## R-HSA-69620 38 ## R-HSA-69618 22 ## R-HSA-2500257 23 ## R-HSA-141424 20 ## R-HSA-141444 20 ## R-HSA-9648025 20 9.3 Reactome pathway gene set enrichment analysis y &lt;- gsePathway(geneList, pvalueCutoff = 0.2, pAdjustMethod = &quot;BH&quot;, verbose = FALSE) head(y) ## ID ## R-HSA-141424 R-HSA-141424 ## R-HSA-141444 R-HSA-141444 ## R-HSA-162909 R-HSA-162909 ## R-HSA-174143 R-HSA-174143 ## R-HSA-174178 R-HSA-174178 ## R-HSA-174184 R-HSA-174184 ## Description ## R-HSA-141424 Amplification of signal from the kinetochores ## R-HSA-141444 Amplification of signal from unattached kinetochores via a MAD2 inhibitory signal ## R-HSA-162909 Host Interactions of HIV factors ## R-HSA-174143 APC/C-mediated degradation of cell cycle proteins ## R-HSA-174178 APC/C:Cdh1 mediated degradation of Cdc20 and other APC/C:Cdh1 targeted proteins in late mitosis/early G1 ## R-HSA-174184 Cdc20:Phospho-APC/C mediated degradation of Cyclin A ## setSize enrichmentScore NES pvalue p.adjust qvalues ## R-HSA-141424 81 0.7111667 2.790129 1e-10 3.994286e-09 2.986466e-09 ## R-HSA-141444 81 0.7111667 2.790129 1e-10 3.994286e-09 2.986466e-09 ## R-HSA-162909 122 0.5860187 2.442364 1e-10 3.994286e-09 2.986466e-09 ## R-HSA-174143 79 0.6940241 2.713148 1e-10 3.994286e-09 2.986466e-09 ## R-HSA-174178 65 0.6868145 2.570550 1e-10 3.994286e-09 2.986466e-09 ## R-HSA-174184 64 0.6941964 2.569925 1e-10 3.994286e-09 2.986466e-09 ## rank leading_edge ## R-HSA-141424 759 tags=31%, list=6%, signal=29% ## R-HSA-141444 759 tags=31%, list=6%, signal=29% ## R-HSA-162909 3321 tags=57%, list=27%, signal=43% ## R-HSA-174143 1851 tags=47%, list=15%, signal=40% ## R-HSA-174178 1851 tags=46%, list=15%, signal=40% ## R-HSA-174184 1851 tags=45%, list=15%, signal=39% ## core_enrichment ## R-HSA-141424 55143/991/1062/10403/220134/79019/55839/54821/4085/81930/332/9212/11004/5347/701/11130/79682/57405/2491/1058/699/1063/55055/79980/9735 ## R-HSA-141444 55143/991/1062/10403/220134/79019/55839/54821/4085/81930/332/9212/11004/5347/701/11130/79682/57405/2491/1058/699/1063/55055/79980/9735 ## R-HSA-162909 3159/3932/5688/9688/3055/5709/5698/919/5693/5902/5713/5721/5691/292/1104/5685/1794/9631/5690/5684/5686/5695/11168/10213/940/23198/7979/6396/23165/5699/5714/6921/55706/8815/5702/23636/9978/5905/5708/1174/5692/5704/5901/164/60489/4927/79902/5683/10762/1175/5694/8480/11097/5718/5682/5716/9972/904/81929/162/5707/57122/4869/926/5696/7514/79023/3837/920/9818 ## R-HSA-174143 991/11065/4751/27338/890/983/4085/9212/6790/891/9232/5347/701/6502/5688/5709/26271/5698/5693/5713/5721/5691/5685/5690/5684/5686/5695/10213/23198/7979/5699/5714/5702/5708/5692/10393/5704 ## R-HSA-174178 991/11065/27338/9212/6790/9232/5347/6502/5688/5709/5698/5693/5713/5721/5691/5685/5690/5684/5686/5695/10213/23198/7979/5699/5714/5702/5708/5692/10393/5704 ## R-HSA-174184 991/11065/27338/890/983/4085/701/5688/5709/5698/5693/5713/5721/5691/5685/5690/5684/5686/5695/10213/23198/7979/5699/5714/5702/5708/5692/10393/5704 9.4 Pathway Visualization ReactomePA implemented the viewPathway() to visualized selected reactome pathway. More general purpose of visualization methods for ORA and GSEA results are provided in the enrichplot package and are documented on Chapter 14. viewPathway(&quot;E2F mediated regulation of DNA replication&quot;, readable = TRUE, foldChange = geneList) Figure 9.1: Visualize reactome pathway. Chapter 10 Disease enrichment analysis We developed DOSE (Yu et al. 2015) package to promote the investigation of diseases. DOSE provides five methods for measuring semantic similarities among DO terms and gene products, hypergeometric model and gene set enrichment analysis (GSEA) for associating disease with gene list and extracting disease association insight from genome wide expression profiles. 10.1 Disease over-representation analysis DOSE supports enrichment analysis of Disease Ontology (DO) (Schriml et al. 2011), Network of Cancer Gene (A. et al. 2016) and Disease Gene Network (DisGeNET) (Janet et al. 2015). In addition, several visualization methods were provided by enrichplot to help interpreting semantic and enrichment results. 10.1.1 Over-representation analysis for disease ontology In the following example, we selected fold change above 1.5 as the differential genes and analyzing their disease association. library(DOSE) data(geneList) gene &lt;- names(geneList)[abs(geneList) &gt; 1.5] head(gene) ## [1] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; x &lt;- enrichDO(gene = gene, ont = &quot;DO&quot;, pvalueCutoff = 0.05, pAdjustMethod = &quot;BH&quot;, universe = names(geneList), minGSSize = 5, maxGSSize = 500, qvalueCutoff = 0.05, readable = FALSE) head(x) ## ID Description GeneRatio BgRatio ## DOID:170 DOID:170 endocrine gland cancer 48/331 472/6268 ## DOID:10283 DOID:10283 prostate cancer 40/331 394/6268 ## DOID:3459 DOID:3459 breast carcinoma 37/331 357/6268 ## DOID:3856 DOID:3856 male reproductive organ cancer 40/331 404/6268 ## DOID:824 DOID:824 periodontitis 16/331 109/6268 ## DOID:3905 DOID:3905 lung carcinoma 43/331 465/6268 ## pvalue p.adjust qvalue ## DOID:170 5.662129e-06 0.004784499 0.003826407 ## DOID:10283 3.859157e-05 0.013921739 0.011133923 ## DOID:3459 4.942629e-05 0.013921739 0.011133923 ## DOID:3856 6.821467e-05 0.014410349 0.011524689 ## DOID:824 1.699304e-04 0.018859464 0.015082872 ## DOID:3905 1.749754e-04 0.018859464 0.015082872 ## geneID ## DOID:170 10874/7153/1381/6241/11065/10232/332/6286/2146/10112/891/9232/4171/993/5347/4318/3576/1515/4821/8836/3159/7980/5888/333/898/9768/4288/3551/2152/9590/185/7043/3357/2952/5327/3667/1634/1287/4582/7122/3479/4680/6424/80310/652/8839/9547/1524 ## DOID:10283 4312/6280/6279/597/3627/332/6286/2146/4321/4521/891/5347/4102/4318/701/3576/79852/10321/6352/4288/3551/2152/247/2952/3487/367/3667/4128/4582/563/3679/4117/7031/3479/6424/10451/80310/652/4036/10551 ## DOID:3459 4312/6280/6279/7153/4751/890/4085/332/6286/6790/891/9232/10855/4171/5347/4318/701/2633/3576/9636/898/8792/4288/2952/4982/4128/4582/7031/3479/771/4250/2066/3169/10647/5304/5241/10551 ## DOID:3856 4312/6280/6279/597/3627/332/6286/2146/4321/4521/891/5347/4102/4318/701/3576/79852/10321/6352/4288/3551/2152/247/2952/3487/367/3667/4128/4582/563/3679/4117/7031/3479/6424/10451/80310/652/4036/10551 ## DOID:824 4312/6279/820/7850/4321/3595/4318/4069/3576/1493/6352/8842/185/2952/5327/4982 ## DOID:3905 4312/6280/2305/9133/6279/7153/6278/6241/55165/11065/8140/10232/332/6286/3002/9212/4521/891/4171/9928/8061/4318/3576/1978/1894/7980/7083/898/6352/8842/4288/2152/2697/2952/3572/4582/7049/563/3479/1846/3117/2532/2922 ## Count ## DOID:170 48 ## DOID:10283 40 ## DOID:3459 37 ## DOID:3856 40 ## DOID:824 16 ## DOID:3905 43 The enrichDO() function requires an entrezgene ID vector as input, mostly is the differential gene list of gene expression profile studies. Please refer to session 16.1 if you need to conver other gene ID types to entrezgene ID. The ont parameter can be ‚ÄúDO‚Äù or ‚ÄúDOLite,‚Äù DOLite (Du et al. 2009) was constructed to aggregate the redundant DO terms. The DOLite data is not updated, we recommend user use ont=\"DO\". pvalueCutoff setting the cutoff value of p value and adjusted p value; pAdjustMethod setting the p value correction methods, include the Bonferroni correction (‚Äúbonferroni‚Äù), Holm (‚Äúholm‚Äù), Hochberg (‚Äúhochberg‚Äù), Hommel (‚Äúhommel‚Äù), Benjamini &amp; Hochberg (‚ÄúBH‚Äù) and Benjamini &amp; Yekutieli (‚ÄúBY‚Äù) while qvalueCutoff is used to control q-values. The universe setting the background gene universe for testing. If user do not explicitly setting this parameter, enrichDO() will set the universe to all human genes that have DO annotation. The minGSSize (and maxGSSize) indicates that only those DO terms that have more than minGSSize (and less than maxGSSize) genes annotated will be tested. The readable is a logical parameter, indicates whether the entrezgene IDs will mapping to gene symbols or not (see also setReadable). 10.1.2 Over-representation analysis for the network of cancer gene Network of Cancer Gene (NCG) (A. et al. 2016) is a manually curated repository of cancer genes. NCG release 5.0 (Aug.¬†2015) collects 1,571 cancer genes from 175 published studies. DOSE supports analyzing gene list and determine whether they are enriched in genes known to be mutated in a given cancer type. gene2 &lt;- names(geneList)[abs(geneList) &lt; 3] ncg &lt;- enrichNCG(gene2) head(ncg) ## ID ## pan-cancer_paediatric pan-cancer_paediatric ## triple_negative_breast_cancer triple_negative_breast_cancer ## breast_cancer breast_cancer ## soft_tissue_sarcoma soft_tissue_sarcoma ## paediatric_high-grade_glioma paediatric_high-grade_glioma ## pancreatic_cancer_(all_histologies) pancreatic_cancer_(all_histologies) ## Description ## pan-cancer_paediatric pan-cancer_paediatric ## triple_negative_breast_cancer triple_negative_breast_cancer ## breast_cancer breast_cancer ## soft_tissue_sarcoma soft_tissue_sarcoma ## paediatric_high-grade_glioma paediatric_high-grade_glioma ## pancreatic_cancer_(all_histologies) pancreatic_cancer_(all_histologies) ## GeneRatio BgRatio pvalue ## pan-cancer_paediatric 161/1782 182/2372 2.748816e-06 ## triple_negative_breast_cancer 71/1782 75/2372 6.564667e-06 ## breast_cancer 146/1782 171/2372 5.249102e-04 ## soft_tissue_sarcoma 26/1782 26/2372 5.633144e-04 ## paediatric_high-grade_glioma 25/1782 25/2372 7.524752e-04 ## pancreatic_cancer_(all_histologies) 39/1782 41/2372 7.825494e-04 ## p.adjust qvalue ## pan-cancer_paediatric 0.0002226541 0.0001504615 ## triple_negative_breast_cancer 0.0002658690 0.0001796646 ## breast_cancer 0.0105644165 0.0071390469 ## soft_tissue_sarcoma 0.0105644165 0.0071390469 ## paediatric_high-grade_glioma 0.0105644165 0.0071390469 ## pancreatic_cancer_(all_histologies) 0.0105644165 0.0071390469 ## geneID ## pan-cancer_paediatric 2146/55353/4609/1029/3575/22806/3418/3066/2120/30012/867/7468/7545/3195/865/64109/4613/613/11177/7490/238/10736/10054/5771/4893/140885/1785/9760/3417/6597/6476/9126/4869/10320/7307/80204/1050/8028/2312/6608/896/894/2196/4849/7023/5093/5079/5293/5727/55181/171017/51322/5781/3718/55294/60/673/8085/5897/4851/51176/1108/7764/10664/6098/2332/2201/6495/3845/7015/1441/2782/64919/4298/23512/8239/29102/6929/8021/6134/6598/4209/5290/22941/8726/207/3717/2033/10716/4928/6932/694/5156/10019/6886/9968/7080/2623/7874/1654/4149/3020/23219/55252/55729/10735/5728/4853/23451/51341/387/3206/6146/79718/2624/63035/3815/171023/23269/25/9839/23592/5896/7403/2260/54880/3716/9203/57178/6777/5789/4297/29072/90/546/120/25836/8289/4345/9611/5925/4763/1997/1499/7157/3399/5295/1387/4602/51564/1027/4005/2322/2078/678/6403/55709/1277/7494/64061/2625 ## triple_negative_breast_cancer 6790/898/4609/1029/1789/4436/2120/867/7128/1788/1030/7490/2271/238/675/2047/4914/1316/5291/5293/5781/55294/8085/4851/4170/3845/355/1616/4854/5290/207/2033/4233/29110/2903/5979/5728/4853/2624/3815/10000/7403/2260/55193/472/5789/4297/2065/4286/8626/8405/8289/10499/55164/5925/4763/23405/1499/4921/7157/5295/1387/2078/324/7248/7048/22894/3480/2045/2066/2625 ## breast_cancer 4751/701/898/639/29028/4609/7399/1029/1520/4436/83990/11200/10849/2072/4771/865/999/1788/26191/1030/10801/83737/6262/1956/672/8590/675/4893/6597/8202/2778/208/51412/896/2132/677/4849/4221/65220/2854/55294/673/4193/8085/4851/57127/841/3265/7764/10664/9721/3845/3956/868/9175/6602/11174/8239/9860/6954/5290/1523/207/2033/2334/3782/8312/9514/5156/186/54897/71/79728/545/143/2064/4089/8471/8314/91/5289/1021/10735/5979/5728/4853/23451/9439/6738/387/55770/79718/4301/171023/23013/51135/80243/4292/149076/10983/6103/7403/54880/4916/55193/9203/1635/1495/2309/472/5076/2909/5789/4297/2065/29072/2263/546/8289/2874/9611/5925/6416/4763/7157/4088/23152/5295/6794/1387/4602/1027/5737/324/595/7188/4681/4214/7494/2099/3480/4485/2891/6926/3169/2625 ## soft_tissue_sarcoma 999/6850/4914/4342/2185/55294/2041/4851/2044/4058/5290/4486/5297/5728/3815/2324/7403/546/5925/4763/1499/7157/5159/2045/3667/2066 ## paediatric_high-grade_glioma 4609/1029/1019/4613/1030/1956/4914/896/894/673/8493/5290/4233/5156/1021/63035/54880/4916/90/546/4763/7157/5295/595/4915 ## pancreatic_cancer_(all_histologies) 1029/4771/8997/7159/2011/6597/7307/3710/6710/55294/7091/3845/23654/7046/3096/4089/91/8241/54549/92/23451/63035/7403/55193/23309/472/800/29072/23077/23499/8289/54894/6416/7157/4088/182/7048/2199/26960 ## Count ## pan-cancer_paediatric 161 ## triple_negative_breast_cancer 71 ## breast_cancer 146 ## soft_tissue_sarcoma 26 ## paediatric_high-grade_glioma 25 ## pancreatic_cancer_(all_histologies) 39 10.1.3 Over-representation analysis for the disease gene network DisGeNET(Janet et al. 2015) is an integrative and comprehensive resources of gene-disease associations from several public data sources and the literature. It contains gene-disease associations and snp-gene-disease associations. The enrichment analysis of disease-gene associations is supported by the enrichDGN function and analysis of snp-gene-disease associations is supported by the enrichDGNv function. dgn &lt;- enrichDGN(gene) head(dgn) ## ID Description GeneRatio BgRatio ## C0010278 C0010278 Craniosynostosis 43/497 488/21671 ## C0853879 C0853879 Invasive carcinoma of breast 42/497 473/21671 ## C4733092 C4733092 estrogen receptor-negative breast cancer 34/497 356/21671 ## C3642347 C3642347 Basal-Like Breast Carcinoma 28/497 245/21671 ## C3642345 C3642345 Luminal A Breast Carcinoma 22/497 153/21671 ## C0036202 C0036202 Sarcoidosis 36/497 413/21671 ## pvalue p.adjust qvalue ## C0010278 4.609534e-14 2.267976e-10 1.636811e-10 ## C0853879 7.105190e-14 2.267976e-10 1.636811e-10 ## C4733092 2.446675e-12 4.864593e-09 3.510804e-09 ## C3642347 3.047991e-12 4.864593e-09 3.510804e-09 ## C3642345 7.034749e-12 8.438458e-09 6.090082e-09 ## C0036202 7.930882e-12 8.438458e-09 6.090082e-09 ## geneID ## C0010278 4312/8318/6280/1062/6279/6278/3627/820/27299/6362/81620/2146/3002/29968/990/4318/4069/3576/6890/23594/26279/1493/6352/4998/2152/2697/185/4330/5327/4982/1300/3667/2200/9607/3572/563/7031/3479/6424/1846/3117/1308/2625 ## C0853879 4312/7153/6278/9787/9582/51203/890/983/5080/2146/1111/9232/10855/4171/6664/4102/2173/4318/701/3576/1978/8836/53335/1894/7980/8792/8842/2151/185/2952/367/4982/4582/6926/3479/1602/23158/2066/3169/5304/2625/5241 ## C4733092 2305/6278/79733/6241/81930/81620/2146/3620/29968/11004/8061/3576/1894/2491/7083/8792/214/5327/367/4982/3667/4582/27324/3479/1846/80129/4137/8839/3169/1408/5304/2625/5241/10551 ## C3642347 2305/1062/4605/9833/7368/11065/10232/55765/5163/2146/2568/3620/6790/6664/29127/2173/4318/3576/3159/8792/6663/27324/3479/1846/18/3169/2625/5241 ## C3642345 2305/9833/7153/55355/1111/3161/4318/3576/2001/6663/4288/2152/185/4128/4582/27324/80129/3169/5304/8614/2625/5241 ## C0036202 4312/6280/6279/10403/3627/6373/4283/27299/6362/3002/4321/6355/6364/29851/4318/5004/4069/3576/26227/6890/6352/4485/23541/185/7043/6863/2952/4982/25802/4582/2053/3479/3117/2167/80736/1524 ## Count ## C0010278 43 ## C0853879 42 ## C4733092 34 ## C3642347 28 ## C3642345 22 ## C0036202 36 snp &lt;- c(&quot;rs1401296&quot;, &quot;rs9315050&quot;, &quot;rs5498&quot;, &quot;rs1524668&quot;, &quot;rs147377392&quot;, &quot;rs841&quot;, &quot;rs909253&quot;, &quot;rs7193343&quot;, &quot;rs3918232&quot;, &quot;rs3760396&quot;, &quot;rs2231137&quot;, &quot;rs10947803&quot;, &quot;rs17222919&quot;, &quot;rs386602276&quot;, &quot;rs11053646&quot;, &quot;rs1805192&quot;, &quot;rs139564723&quot;, &quot;rs2230806&quot;, &quot;rs20417&quot;, &quot;rs966221&quot;) dgnv &lt;- enrichDGNv(snp) head(dgnv) ## ID Description GeneRatio BgRatio pvalue ## C0010054 C0010054 Coronary Arteriosclerosis 6/17 440/194515 1.568917e-12 ## C0151744 C0151744 Myocardial Ischemia 4/17 103/194515 1.754840e-10 ## C0031099 C0031099 Periodontitis 4/17 116/194515 2.839985e-10 ## C0007785 C0007785 Cerebral Infarction 4/17 123/194515 3.599531e-10 ## C0003850 C0003850 Arteriosclerosis 4/17 267/194515 8.145389e-09 ## C0004153 C0004153 Atherosclerosis 4/17 281/194515 9.996713e-09 ## p.adjust qvalue ## C0010054 2.761295e-10 NA ## C0151744 1.544259e-08 NA ## C0031099 1.583793e-08 NA ## C0007785 1.583793e-08 NA ## C0003850 2.867177e-07 NA ## C0004153 2.932369e-07 NA ## geneID Count ## C0010054 rs5498/rs147377392/rs11053646/rs1805192/rs2230806/rs20417 6 ## C0151744 rs5498/rs147377392/rs11053646/rs1805192 4 ## C0031099 rs5498/rs909253/rs1805192/rs20417 4 ## C0007785 rs147377392/rs11053646/rs1805192/rs2230806 4 ## C0003850 rs5498/rs1805192/rs2230806/rs20417 4 ## C0004153 rs5498/rs1805192/rs2230806/rs20417 4 10.2 Disease gene set enrichment analysis 10.2.1 gseDO fuction In the following example, in order to speedup the compilation of this document, only gene sets with size above 120 were tested and only 100 permutations were performed. library(DOSE) data(geneList) y &lt;- gseDO(geneList, minGSSize = 120, pvalueCutoff = 0.2, pAdjustMethod = &quot;BH&quot;, verbose = FALSE) head(y, 3) ## ID Description setSize ## DOID:0050338 DOID:0050338 primary bacterial infectious disease 214 ## DOID:104 DOID:104 bacterial infectious disease 243 ## DOID:399 DOID:399 tuberculosis 140 ## enrichmentScore NES pvalue p.adjust qvalues ## DOID:0050338 0.4569856 2.042460 1.363997e-09 2.141476e-07 8.183983e-08 ## DOID:104 0.4286201 1.954745 6.508681e-09 5.109314e-07 1.952604e-07 ## DOID:399 0.4999969 2.105697 2.492603e-08 1.304462e-06 4.985205e-07 ## rank leading_edge ## DOID:0050338 1850 tags=35%, list=15%, signal=30% ## DOID:104 1808 tags=32%, list=14%, signal=28% ## DOID:399 1808 tags=36%, list=14%, signal=31% ## core_enrichment ## DOID:0050338 4312/597/3627/6373/820/3620/6364/29851/4318/3576/26227/6890/952/1493/6352/3934/54210/3932/5551/3559/6347/6402/639/94025/3126/3001/6351/1236/5698/3948/919/3458/959/7296/79139/3804/4159/942/3329/9235/1234/7096/3383/4068/6367/5806/100/3659/4360/939/6891/4210/671/7422/929/26191/6504/27087/4282/7124/5027/5329/3569/4049/7097/56244/7852/1378/5133/5743/348/1118/3119/7415 ## DOID:104 4312/597/3627/6373/820/3620/6364/29851/4318/3576/26227/6890/952/1493/6352/3934/54210/10663/3932/5551/3559/6772/6347/6402/639/94025/3126/3001/6351/1236/3654/5698/3948/919/3458/959/7296/79139/3804/4159/942/3329/9235/3689/1234/7096/3383/4068/6367/5806/100/3659/4360/939/6891/4210/671/7422/929/26191/6504/27087/4282/7124/5027/5329/3569/4049/7097/56244/7852/1378/5133/5743/348/1118/3119 ## DOID:399 4312/597/3627/820/6364/29851/4318/3576/26227/1493/6352/3934/5551/3559/6347/94025/3001/6351/3948/919/3458/959/4159/942/9235/7096/3383/4068/6367/5806/100/3659/4360/939/671/929/26191/27087/4282/7124/5027/3569/7097/56244/7852/1378/5133/348/1118/3119 10.2.2 gseNCG fuction ncg &lt;- gseNCG(geneList, minGSSize = 120, pvalueCutoff = 0.2, pAdjustMethod = &quot;BH&quot;, verbose = FALSE) ncg &lt;- setReadable(ncg, &#39;org.Hs.eg.db&#39;) head(ncg, 3) ## [1] ID Description setSize enrichmentScore ## [5] NES pvalue p.adjust qvalues ## &lt;0 rows&gt; (or 0-length row.names) 10.2.3 gseDGN fuction dgn &lt;- gseDGN(geneList, minGSSize = 120, pvalueCutoff = 0.2, pAdjustMethod = &quot;BH&quot;, verbose = FALSE) dgn &lt;- setReadable(dgn, &#39;org.Hs.eg.db&#39;) head(dgn, 3) ## ID Description setSize enrichmentScore ## C0024266 C0024266 Lymphocytic Choriomeningitis 120 0.5712593 ## C0151779 C0151779 Cutaneous Melanoma 415 0.3963772 ## C0205682 C0205682 Waist-Hip Ratio 401 -0.4425633 ## NES pvalue p.adjust qvalues rank leading_edge ## C0024266 2.380210 1e-10 2.69e-08 1.75e-08 2579 tags=48%, list=21%, signal=38% ## C0151779 1.942344 1e-10 2.69e-08 1.75e-08 1864 tags=27%, list=15%, signal=24% ## C0205682 -1.935937 1e-10 2.69e-08 1.75e-08 2011 tags=28%, list=16%, signal=24% ## core_enrichment ## C0024266 S100A9/CXCL10/CXCL9/EZH2/GZMB/ICOS/USP18/CXCL8/CTLA4/TREM1/PRF1/ADM/CA9/STAT1/CCL2/SELL/CDKN2A/IL7/IL7R/IFNG/CCR5/IL27RA/SH2D1A/FCER1G/CDK2AP2/CPVL/CD27/PSMB10/PTPN22/SLAMF1/KDM1A/TNF/IL6/FGL2/TLR2/RPAIN/NELFCD/PDCD1/WAS/HIF1A/ATP5F1B/FCGR2B/EGR2/STX11/CXCR3/TYROBP/YME1L1/SOSTDC1/PTPN2/TRAF1/HNF1A/IRF9/PML/NR0B2/IL2/TOX/AGFG1 ## C0151779 MMP1/CDCA8/S100A8/TOP2A/PBK/ISG20/NEK2/CCL18/PDK1/EZH2/AURKB/CHAF1B/KIF18B/MMP12/LAG3/DTL/PTTG1/SOX11/CDKN3/PRAME/PLK1/FABP7/MMP9/GBP1/CXCL8/CTLA4/SOX10/PROM1/MKI67/FANCA/MCM6/MCM4/PITX1/DBF4/IL2RA/TYMS/PLA2G2A/MYC/PCNA/NDRG1/CDKAL1/BLM/E2F1/OCA2/CD163/CDKN2A/NME1/TCF21/KMO/VCAM1/RUNX3/IFNG/MCM7/KYNU/STIP1/CCDC88C/GSTP1/CHAF1A/MSH2/CYP27B1/MAGEA1/CDKN2C/PRDM16/MX2/CDK4/GAPDH/MCM3/ICAM1/CCL22/CHEK2/CXCL5/ERCC4/SPP1/TEAD4/MTAP/HCP5/MRC1/TUBB3/CD27/S100B/CSPG4/PLP2/NBN/VEGFA/IFNW1/CDK16/CDH1/CCNF/CBLIF/SOX4/PARP1/SLC16A1/DNMT1/MAP2K1/ATG5/TNF/NXT1/CDKN2B/RBX1/IL6/TLR2/CXCR4/PDCD1/PTGS2/HIF1A/JMJD6/XRCC3/HLA-DQB1/PVR/CASP10/TGFA/EGFR ## C0205682 RETREG3/JMJD1C/SH2B1/BDNF/ARHGEF26/PDE5A/BPTF/SMAD3/TTC39A/ATP2B1/ARID4A/HOXC4/NID1/LAMA4/LRRC36/NUDT18/ANKRD28/HECTD4/COL11A1/MEIS1/INSR/CUL9/NRIP3/BCL2/CD34/EZH1/DYM/NDST1/COL15A1/VGLL3/CCND1/ZCCHC10/HOXC6/RAB26/QTRT1/MEIS2/ARID5B/AHNAK/FGF1/CAPRIN2/LAMB1/CPEB3/ELOVL4/CDADC1/PDE8B/ZNF268/NRP1/SYTL2/NR5A2/DGLUCY/SEMA3B/NID2/SIK3/PRR5L/FGF2/COL8A1/RAPGEF3/RBM6/CDH13/JCAD/NAV3/TRIM8/PPIEL/PTPRG/NBL1/CALCRL/PPL/LPL/BCKDHB/MAPKBP1/CNTLN/BBS4/P4HTM/FTO/PDZRN4/PDGFC/SGCD/NRXN3/AFF3/IGF1R/ABCC8/MPPED2/COL5A1/COL6A2/LOXL1/CYP21A2/LTBP2/TTC28/PATJ/PCSK5/WNT4/TTC12/NISCH/ASTN2/TCEA2/MN1/SETBP1/TAOK1/MAST4/ITGA7/ITGBL1/COL14A1/C1QTNF3/ZNF423/IQCH/MYH11/ADH1B/ABLIM3/MAPT/STC2/TFAP2B/CYBRD1/SCUBE2 Chapter 11 MeSH enrichment analysis The meshes package (Yu 2018) supports enrichment analysis (over-representation analysis and gene set enrichment analysis) of gene list or whole expression profile using MeSH annotation. Data source from gendoo, gene2pubmed and RBBH are all supported. User can select interesting category to test. All 16 categories of MeSH are supported. The analysis supports &gt;70 species listed in MeSHDb BiocView (see also Chapter 4 for more details). 11.1 MeSH over-representation analysis In this example, we use data source from gendoo and C (Diseases) category. library(meshes) data(geneList, package=&quot;DOSE&quot;) de &lt;- names(geneList)[1:100] x &lt;- enrichMeSH(de, MeSHDb = &quot;MeSH.Hsa.eg.db&quot;, database=&#39;gendoo&#39;, category = &#39;C&#39;) head(x) ## ID Description GeneRatio BgRatio pvalue ## D043171 D043171 Chromosomal Instability 16/96 198/16528 2.794765e-14 ## D000782 D000782 Aneuploidy 17/96 320/16528 3.866830e-12 ## D042822 D042822 Genomic Instability 16/96 312/16528 3.007419e-11 ## D012595 D012595 Scleroderma, Systemic 11/96 279/16528 6.449334e-07 ## D009303 D009303 Nasopharyngeal Neoplasms 11/96 314/16528 2.049315e-06 ## D019698 D019698 Hepatitis C, Chronic 11/96 317/16528 2.246856e-06 ## p.adjust qvalue ## D043171 2.459394e-11 1.815127e-11 ## D000782 1.701405e-09 1.255702e-09 ## D042822 8.821761e-09 6.510798e-09 ## D012595 1.418854e-04 1.047168e-04 ## D009303 3.295389e-04 2.432123e-04 ## D019698 3.295389e-04 2.432123e-04 ## geneID ## D043171 4312/991/2305/1062/4605/10403/7153/55355/4751/4085/81620/332/7272/9212/1111/6790 ## D000782 4312/55143/991/1062/7153/4751/79019/55839/890/983/4085/332/7272/9212/8208/1111/6790 ## D042822 55143/991/1062/4605/7153/1381/9787/4751/10635/890/4085/81620/332/9212/1111/6790 ## D012595 4312/6280/1062/4605/7153/3627/4283/6362/7850/3002/4321 ## D009303 4312/7153/3627/6241/983/4085/5918/332/3002/4321/6790 ## D019698 4312/3627/10563/6373/4283/983/6362/7850/332/3002/3620 ## Count ## D043171 16 ## D000782 17 ## D042822 16 ## D012595 11 ## D009303 11 ## D019698 11 11.2 MeSH gene set enrichment analysis In the following example, we use data source from gene2pubmed and test category G (Phenomena and Processes). y &lt;- gseMeSH(geneList, MeSHDb = &quot;MeSH.Hsa.eg.db&quot;, database = &#39;gene2pubmed&#39;, category = &quot;G&quot;) head(y) ## ID Description setSize enrichmentScore NES pvalue ## D000782 D000782 Aneuploidy 391 0.4154424 1.991027 1e-10 ## D007156 D007156 Immunologic Memory 444 0.3983485 1.927594 1e-10 ## D011123 D011123 Polyploidy 188 0.5235442 2.324306 1e-10 ## D011418 D011418 Prophase 80 0.6553019 2.568616 1e-10 ## D014690 D014690 Venous Pressure 140 -0.5849507 -2.309944 1e-10 ## D017735 D017735 Virus Latency 415 0.3891947 1.884672 1e-10 ## p.adjust qvalues rank leading_edge ## D000782 7.085714e-09 5.255639e-09 1826 tags=27%, list=15%, signal=24% ## D007156 7.085714e-09 5.255639e-09 2111 tags=31%, list=17%, signal=27% ## D011123 7.085714e-09 5.255639e-09 1905 tags=33%, list=15%, signal=28% ## D011418 7.085714e-09 5.255639e-09 437 tags=22%, list=3%, signal=22% ## D014690 7.085714e-09 5.255639e-09 1824 tags=51%, list=15%, signal=44% ## D017735 7.085714e-09 5.255639e-09 1862 tags=25%, list=15%, signal=22% ## core_enrichment ## D000782 4312/991/2305/1062/10403/7153/23397/55165/11065/22974/10460/4751/79019/55839/890/983/4085/332/50852/7272/9212/8208/1111/9319/9055/3833/6790/891/24137/9232/4171/11004/5347/701/11130/79682/2491/9700/5888/7083/898/4288/10733/2237/6502/8538/9918/1058/699/4609/5111/10397/84823/55506/51053/1869/1029/1763/136/4904/55159/5613/5471/2950/54512/23310/3066/9496/79915/995/10606/51471/5885/5616/2762/79017/7428/22827/3195/7283/6636/5440/54908/1445/7422/5315/999/6573/138046/10376/142/54584/5129/9775/4613/9978/3619/11335/613/5133/81552/4363/3091/7517/6629/26047 ## D007156 6280/8685/3627/10563/6373/4283/6362/3002/3620/891/10578/3695/6364/23532/29851/3576/7083/952/1493/6352/4288/10663/80380/5551/3559/6772/3507/6402/639/914/64581/57823/50802/4609/3561/6351/1237/6614/917/1236/51053/10859/1029/55423/3574/3575/919/915/22806/4067/6354/608/3458/959/1789/3903/11151/8525/3162/3702/925/11314/50615/942/1880/3329/969/867/3783/4064/25939/6361/1794/3689/5788/1234/916/7096/3383/4068/962/6367/30009/100/7374/3600/6513/923/940/939/5588/3965/9308/4683/6404/3738/930/6318/929/8115/26191/3601/27087/6850/7124/912/5027/10875/7097/7852/1378/2208/5133/3692/7454/51293/5817/951/3820/843/27033/5142/2213/7490/1536/5795/3135/60489/6376/3596/2000/7293/2833/655/356/1380/958/1672 ## D011123 2305/4605/9133/7153/79733/890/983/4085/81620/332/2146/7272/9212/51659/1111/6790/891/9232/990/5347/701/1978/9700/898/23594/6502/699/4609/5111/10397/26271/51053/1869/1029/4830/3925/5693/8565/2810/8607/58/1019/11200/2072/7283/7422/5315/865/86/63967/999/5604/3014/9978/4049/3619/7454/58477/1000/1956/28985/6119 ## D011418 991/1062/259266/22974/4751/890/983/4085/3832/6790/891/5347/701/79682/10615/1058/699/26271 ## D014690 4811/3910/3371/2662/1291/3490/7450/80781/1280/1306/8425/10085/4054/4256/3912/2817/1278/1511/2934/4060/1277/7078/5549/22795/10516/1293/1295/1012/8076/5118/2192/1281/1290/7058/2202/2199/11117/3339/1462/1289/1292/3908/4016/3909/4053/6678/633/1191/165/5654/10631/1805/2331/347/1359/3913/8404/2200/1634/4059/7177/563/7373/1307/9370/79148/1311/8483/54829/4239/4969 ## D017735 6280/4605/6279/3627/6373/4283/332/2146/9212/6355/6364/9768/4599/54210/54962/5551/200315/6772/639/914/3015/699/4609/85236/5111/10397/917/55506/330/6590/1029/1051/3574/8970/8357/919/915/51191/22806/3458/2957/1789/5435/92815/3066/5499/8336/9088/6283/9235/25939/5788/1234/916/467/3383/5885/9188/54496/11200/11168/7374/940/8345/6873/1024/5440/5588/3965/8914/865/10148/6404/3276/3018/929/142/6504/6839/23028/10969/5467/1786/27087/4781/3014/7124/3569/6749/11335/83737/7852/51497/2208/5133/5743/5433/4363/3091/3119/8290/9681 User can use visualization methods implemented in enrichplot to visualize these enrichment results. With these visualization methods, it‚Äôs much easier to interpret enriched results. Chapter 12 Universal enrichment analysis The clusterProfiler package (Yu et al. 2012) supports both hypergeometric test and gene set enrichment analyses of many ontology/pathway, but it‚Äôs still not enough for users may want to analyze their data with unsupported organisms, slim version of GO, novel functional annotation (e.g.¬†GO via BlastGO or KEGG via KAAS), unsupported ontologies/pathways or customized annotations. The clusterProfiler package provides enricher() function for hypergeometric test and GSEA() function for gene set enrichment analysis that are designed to accept user defined annotation. They accept two additional parameters TERM2GENE and TERM2NAME. As indicated in the parameter names, TERM2GENE is a data.frame with first column of term ID and second column of corresponding mapped gene and TERM2NAME is a data.frame with first column of term ID and second column of corresponding term name. TERM2NAME is optional. 12.1 Input data For over representation analysis, all we need is a gene vector, that is a vector of gene IDs. These gene IDs can be obtained by differential expression analysis (e.g. with the DESeq2 package). For gene set enrichment analysis, we need a ranked list of genes. DOSE provides an example dataset geneList which was derived from R package breastCancerMAINZ that contained 200 samples, including 29 samples in grade I, 136 samples in grade II and 35 samples in grade III. We computed the ratios of geometric means of grade III samples versus geometric means of grade I samples. Logarithm of these ratios (base 2) were stored in geneList dataset. If you want to prepare your own geneList, please refer to the FAQ. We can load the sample data into R via: data(geneList, package=&quot;DOSE&quot;) head(geneList) ## 4312 8318 10874 55143 55388 991 ## 4.572613 4.514594 4.418218 4.144075 3.876258 3.677857 Suppose we define fold change greater than 2 as DEGs: gene &lt;- names(geneList)[abs(geneList) &gt; 2] head(gene) ## [1] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; 12.2 Cell Marker cell_marker_data &lt;- vroom::vroom(&#39;http://bio-bigdata.hrbmu.edu.cn/CellMarker/download/Human_cell_markers.txt&#39;) ## instead of `cellName`, users can use other features (e.g. `cancerType`) cells &lt;- cell_marker_data %&gt;% dplyr::select(cellName, geneID) %&gt;% dplyr::mutate(geneID = strsplit(geneID, &#39;, &#39;)) %&gt;% tidyr::unnest() 12.2.1 Cell Marker over-presentaton analysis x &lt;- enricher(gene, TERM2GENE = cells) head(x) ## ID Description GeneRatio ## Neural progenitor cell Neural progenitor cell Neural progenitor cell 33/153 ## MKI67+ progenitor cell MKI67+ progenitor cell MKI67+ progenitor cell 20/153 ## DCLK1+ progenitor cell DCLK1+ progenitor cell DCLK1+ progenitor cell 7/153 ## BgRatio pvalue p.adjust qvalue ## Neural progenitor cell 176/11582 3.395466e-29 3.259648e-27 2.716373e-27 ## MKI67+ progenitor cell 111/11582 1.426062e-17 6.845100e-16 5.704250e-16 ## DCLK1+ progenitor cell 99/11582 3.298755e-04 1.055601e-02 8.796679e-03 ## geneID ## Neural progenitor cell 991/9493/9833/9133/10403/7153/259266/6241/9787/11065/55355/55872/51203/83461/22974/10460/79019/55839/890/983/4085/5080/332/3832/9212/51659/9055/891/4174/9232/1602/2018/4137 ## MKI67+ progenitor cell 991/9133/10403/7153/259266/6241/9787/11065/51203/22974/10460/890/983/332/9212/9055/891/9232/2167/51705 ## DCLK1+ progenitor cell 1307/730/54829/10234/79901/57758/4969 ## Count ## Neural progenitor cell 33 ## MKI67+ progenitor cell 20 ## DCLK1+ progenitor cell 7 12.2.2 Cell Marker gene set enrichment analysis y &lt;- GSEA(geneList, TERM2GENE = cells) head(y) ## ID ## Ciliated epithelial cell Ciliated epithelial cell ## FOXN4+ cell FOXN4+ cell ## Leydig precursor cell Leydig precursor cell ## Neural progenitor cell Neural progenitor cell ## Paneth cell Paneth cell ## FGFR1HighNME5- epithelial cell FGFR1HighNME5- epithelial cell ## Description setSize ## Ciliated epithelial cell Ciliated epithelial cell 217 ## FOXN4+ cell FOXN4+ cell 63 ## Leydig precursor cell Leydig precursor cell 184 ## Neural progenitor cell Neural progenitor cell 149 ## Paneth cell Paneth cell 261 ## FGFR1HighNME5- epithelial cell FGFR1HighNME5- epithelial cell 131 ## enrichmentScore NES pvalue ## Ciliated epithelial cell -0.5012031 -2.067533 1.000000e-10 ## FOXN4+ cell 0.7136090 2.707612 1.000000e-10 ## Leydig precursor cell -0.5710583 -2.307920 1.000000e-10 ## Neural progenitor cell 0.7160571 3.059446 1.000000e-10 ## Paneth cell 0.5381280 2.482673 1.000000e-10 ## FGFR1HighNME5- epithelial cell -0.5739472 -2.241150 2.159136e-10 ## p.adjust qvalues rank ## Ciliated epithelial cell 3.300000e-09 1.936842e-09 1440 ## FOXN4+ cell 3.300000e-09 1.936842e-09 1419 ## Leydig precursor cell 3.300000e-09 1.936842e-09 2609 ## Neural progenitor cell 3.300000e-09 1.936842e-09 684 ## Paneth cell 3.300000e-09 1.936842e-09 2187 ## FGFR1HighNME5- epithelial cell 5.937623e-09 3.484921e-09 1404 ## leading_edge ## Ciliated epithelial cell tags=29%, list=12%, signal=27% ## FOXN4+ cell tags=51%, list=11%, signal=45% ## Leydig precursor cell tags=45%, list=21%, signal=36% ## Neural progenitor cell tags=47%, list=5%, signal=45% ## Paneth cell tags=45%, list=18%, signal=38% ## FGFR1HighNME5- epithelial cell tags=39%, list=11%, signal=35% ## core_enrichment ## Ciliated epithelial cell 9666/1490/9284/7840/51281/126070/5021/55779/80823/79781/11001/81890/79645/79411/8777/4753/2701/2259/9854/8100/323/55152/51364/9940/23345/216/146542/22832/582/57728/4246/7220/55064/79819/54681/5002/79884/10610/26018/79659/6542/53832/7033/8938/23245/26960/55638/9576/114327/54585/1287/9358/55259/643314/64799/6038/80129/4857/80736/2066/79083/79846/11122/79838 ## FOXN4+ cell 79733/4751/79019/983/81620/4069/8836/3070/10733/81831/3932/10926/56938/7298/6491/262/1029/1719/8894/5902/10950/5496/2023/124222/10263/51142/11168/3638/51491/8751/6637/86 ## Leydig precursor cell 7169/120/2949/22871/79822/7070/3624/10761/3671/80114/6326/25959/2013/9902/8654/4017/4811/26010/1291/92689/126393/7474/7168/27303/51454/1306/678/8425/7837/590/5919/23635/8829/1831/30008/1277/7078/4747/6591/56944/8406/1281/11167/1290/9037/2946/283298/1009/4313/6320/3075/6387/5159/1289/1292/116039/3908/5101/1909/83716/5376/633/6857/10631/54674/54587/30846/83468/3487/8404/2200/1634/1287/3479/5348/2006/7373/730/10234/4239/79901/4969 ## Neural progenitor cell 991/9493/9833/9133/10403/7153/259266/6241/9787/11065/55355/55872/51203/83461/22974/10460/79019/55839/890/983/4085/5080/332/3832/9212/51659/9055/891/4174/9232/4171/1033/1164/11004/51512/11130/79682/26227/57405/10615/3149/23594/56992/9768/11339/3070/4288/1163/4175/4173/2237/29028/3838/54478/3015/699/81611/1063/5111/26271/51053/10535/1719/8543/9289/4176/1841/7112/58516/3148 ## Paneth cell 597/3627/8140/1844/4283/7850/2921/7941/4318/4069/3576/1075/10797/56833/713/1230/200315/712/51338/64581/57823/10437/8767/5341/91543/6351/3055/6614/10859/330/9332/313/51765/1051/22797/4067/80896/864/5226/9046/5336/8942/3162/4688/29887/5641/11314/79888/942/6916/1439/1116/10288/7127/4064/1794/483/963/3689/5788/3383/962/23250/3937/2207/3394/5552/54504/1514/79879/64092/409/7805/4360/3936/4689/5880/7128/10105/9308/51296/10148/10287/8477/6503/929/945/10261/4794/9775/8013/5912/7124/5329/10875/7097/7852/1378/5743/6398/7454/3119/951/6039/1240/5142/1536/3071/834/8676/7305/7133/3310/958/5724/728/11309/3059 ## FGFR1HighNME5- epithelial cell 3931/6586/23284/7106/5919/316/8829/4060/10559/8642/2846/58494/79987/8835/8076/64221/5118/83700/79776/50509/1513/7058/4313/55314/91851/10536/2674/3305/5159/443/3908/5101/2690/55733/2550/6857/10631/81035/4330/83468/576/2200/5157/7049/51380/1307/196740/2532/1308/8483/4239 12.3 MSigDb analysis Molecular Signatures Database is a collection of annotated gene sets. It contains 8 major collections: H: hallmark gene sets C1: positional gene sets C2: curated gene sets C3: motif gene sets C4: computational gene sets C5: GO gene sets C6: oncogenic signatures C7: immunologic signatures Users can download GMT files from Broad Institute and use the read.gmt() function to parse the file to be used in enricher() and GSEA(). There is an R package, msigdbr, that already packed the MSigDB gene sets in tidy data format that can be used directly with clusterProfiler (Yu et al. 2012). It supports several specices: library(msigdbr) msigdbr_show_species() ## [1] &quot;Bos taurus&quot; &quot;Caenorhabditis elegans&quot; ## [3] &quot;Canis lupus familiaris&quot; &quot;Danio rerio&quot; ## [5] &quot;Drosophila melanogaster&quot; &quot;Gallus gallus&quot; ## [7] &quot;Homo sapiens&quot; &quot;Mus musculus&quot; ## [9] &quot;Rattus norvegicus&quot; &quot;Saccharomyces cerevisiae&quot; ## [11] &quot;Sus scrofa&quot; We can retrieve all human gene sets: m_df &lt;- msigdbr(species = &quot;Homo sapiens&quot;) head(m_df, 2) %&gt;% as.data.frame ## gs_cat gs_subcat gs_name entrez_gene gene_symbol ## 1 C3 MIR:MIR_Legacy AAACCAC_MIR140 10257 ABCC4 ## 2 C3 MIR:MIR_Legacy AAACCAC_MIR140 23172 ABRAXAS2 ## human_entrez_gene human_gene_symbol gs_id gs_pmid gs_geoid gs_exact_source ## 1 10257 ABCC4 M12609 ## 2 23172 ABRAXAS2 M12609 ## gs_url ## 1 ## 2 ## gs_description ## 1 Genes having at least one occurence of the motif AAACCAC in their 3&#39; untranslated region. The motif represents putative target (that is, seed match) of human mature miRNA hsa-miR-140 (v7.1 miRBase). ## 2 Genes having at least one occurence of the motif AAACCAC in their 3&#39; untranslated region. The motif represents putative target (that is, seed match) of human mature miRNA hsa-miR-140 (v7.1 miRBase). ## species_name species_common_name ortholog_sources num_ortholog_sources ## 1 Homo sapiens human &lt;NA&gt; NA ## 2 Homo sapiens human &lt;NA&gt; NA Or specific collection. Here we use C6, oncogenic gene sets as an example: m_t2g &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C6&quot;) %&gt;% dplyr::select(gs_name, entrez_gene) head(m_t2g) ## # A tibble: 6 x 2 ## gs_name entrez_gene ## &lt;chr&gt; &lt;int&gt; ## 1 AKT_UP_MTOR_DN.V1_DN 25864 ## 2 AKT_UP_MTOR_DN.V1_DN 95 ## 3 AKT_UP_MTOR_DN.V1_DN 137872 ## 4 AKT_UP_MTOR_DN.V1_DN 134 ## 5 AKT_UP_MTOR_DN.V1_DN 55326 ## 6 AKT_UP_MTOR_DN.V1_DN 271 12.3.1 MSigDb over-presentaton analysis em &lt;- enricher(gene, TERM2GENE=m_t2g) head(em) ## ID Description GeneRatio ## RPS14_DN.V1_DN RPS14_DN.V1_DN RPS14_DN.V1_DN 22/183 ## GCNP_SHH_UP_LATE.V1_UP GCNP_SHH_UP_LATE.V1_UP GCNP_SHH_UP_LATE.V1_UP 16/183 ## PRC2_EZH2_UP.V1_DN PRC2_EZH2_UP.V1_DN PRC2_EZH2_UP.V1_DN 15/183 ## VEGF_A_UP.V1_DN VEGF_A_UP.V1_DN VEGF_A_UP.V1_DN 15/183 ## RB_P107_DN.V1_UP RB_P107_DN.V1_UP RB_P107_DN.V1_UP 10/183 ## E2F1_UP.V1_UP E2F1_UP.V1_UP E2F1_UP.V1_UP 12/183 ## BgRatio pvalue p.adjust qvalue ## RPS14_DN.V1_DN 186/10913 4.733372e-13 7.999398e-11 6.527071e-11 ## GCNP_SHH_UP_LATE.V1_UP 181/10913 5.829947e-08 4.926305e-06 4.019595e-06 ## PRC2_EZH2_UP.V1_DN 192/10913 7.652392e-07 3.454763e-05 2.818897e-05 ## VEGF_A_UP.V1_DN 193/10913 8.176953e-07 3.454763e-05 2.818897e-05 ## RB_P107_DN.V1_UP 130/10913 6.438296e-05 2.027918e-03 1.654670e-03 ## E2F1_UP.V1_UP 188/10913 7.535630e-05 2.027918e-03 1.654670e-03 ## geneID ## RPS14_DN.V1_DN 10874/55388/991/9493/1062/4605/9133/23397/79733/9787/55872/83461/54821/51659/9319/9055/10112/4174/5105/2532/7021/79901 ## GCNP_SHH_UP_LATE.V1_UP 55388/7153/79733/6241/9787/51203/983/9212/1111/9319/9055/3833/6790/4174/3169/1580 ## PRC2_EZH2_UP.V1_DN 8318/55388/4605/23397/9787/55355/10460/6362/81620/2146/7272/9212/11182/3887/24137 ## VEGF_A_UP.V1_DN 8318/9493/1062/9133/10403/6241/9787/4085/332/3832/7272/891/23362/2167/10234 ## RB_P107_DN.V1_UP 8318/23397/79733/6241/4085/8208/9055/24137/4174/1307 ## E2F1_UP.V1_UP 55388/7153/23397/79733/9787/2146/2842/9212/8208/1111/9055/3833 ## Count ## RPS14_DN.V1_DN 22 ## GCNP_SHH_UP_LATE.V1_UP 16 ## PRC2_EZH2_UP.V1_DN 15 ## VEGF_A_UP.V1_DN 15 ## RB_P107_DN.V1_UP 10 ## E2F1_UP.V1_UP 12 12.3.2 MSigDb gene set enrichment analysis In over-presentaton analysis, we use oncogenic gene sets (i.e.¬†C6) to test whether the DE genes are involved in the process that leads to cancer. In this example, we will use the C3 category to test whether genes are up/down-regulated by sharing specific motif using GSEA approach. C3_t2g &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C3&quot;) %&gt;% dplyr::select(gs_name, entrez_gene) head(C3_t2g) ## # A tibble: 6 x 2 ## gs_name entrez_gene ## &lt;chr&gt; &lt;int&gt; ## 1 AAACCAC_MIR140 10257 ## 2 AAACCAC_MIR140 23172 ## 3 AAACCAC_MIR140 81 ## 4 AAACCAC_MIR140 90 ## 5 AAACCAC_MIR140 8754 ## 6 AAACCAC_MIR140 11096 em2 &lt;- GSEA(geneList, TERM2GENE = C3_t2g) head(em2) ## ID Description setSize ## E2F1_Q3 E2F1_Q3 E2F1_Q3 187 ## HSD17B8_TARGET_GENES HSD17B8_TARGET_GENES HSD17B8_TARGET_GENES 401 ## SGCGSSAAA_E2F1DP2_01 SGCGSSAAA_E2F1DP2_01 SGCGSSAAA_E2F1DP2_01 129 ## E2F1_Q6 E2F1_Q6 E2F1_Q6 184 ## E2F_Q4 E2F_Q4 E2F_Q4 192 ## E2F_Q6 E2F_Q6 E2F_Q6 189 ## enrichmentScore NES pvalue p.adjust ## E2F1_Q3 0.4983913 2.217898 1.000000e-10 1.606000e-07 ## HSD17B8_TARGET_GENES 0.6368099 3.092388 1.000000e-10 1.606000e-07 ## SGCGSSAAA_E2F1DP2_01 0.5408182 2.259504 1.666457e-10 1.784220e-07 ## E2F1_Q6 0.4937839 2.187073 2.324233e-10 1.866359e-07 ## E2F_Q4 0.4713651 2.099329 8.030102e-10 5.158537e-07 ## E2F_Q6 0.4700783 2.095930 1.044638e-09 5.592297e-07 ## qvalues rank leading_edge ## E2F1_Q3 1.262632e-07 2045 tags=36%, list=16%, signal=30% ## HSD17B8_TARGET_GENES 1.262632e-07 1042 tags=36%, list=8%, signal=34% ## SGCGSSAAA_E2F1DP2_01 1.402747e-07 1797 tags=38%, list=14%, signal=33% ## E2F1_Q6 1.467325e-07 1819 tags=34%, list=15%, signal=30% ## E2F_Q4 4.055624e-07 1663 tags=29%, list=13%, signal=26% ## E2F_Q6 4.396644e-07 1663 tags=29%, list=13%, signal=26% ## core_enrichment ## E2F1_Q3 79733/6241/983/5080/2146/8715/4171/993/990/56992/9768/4998/10733/7037/4175/54962/54954/29028/3015/2643/85236/5111/64785/26271/51053/1869/3925/114/5427/4176/7112/4436/1871/79915/9088/6632/284403/7290/2597/7398/4172/5424/124222/1633/10849/9824/4678/6646/29902/63967/56886/6059/23234/1786/204/51087/23636/2048/83463/10393/79173/688/3007/79677/9462/56946/9221 ## HSD17B8_TARGET_GENES 55143/55388/991/2305/9493/1062/4605/9833/9133/10403/7153/23397/79733/259266/6241/55165/9787/11065/55355/9582/220134/55872/83461/10460/4751/10635/55839/890/9415/983/54821/4085/9837/5080/332/7272/64151/2842/9212/51659/9319/9055/3833/146909/10112/51514/4174/9232/1033/9928/3161/11004/993/4603/79801/990/5347/55215/701/55723/51512/55635/9156/11130/10024/57405/10615/1894/2491/8438/9700/5888/7083/898/3149/56992/9768/4288/10733/1163/4175/5307/2237/29899/55010/59336/56942/5984/29028/3838/1058/54478/3015/699/6491/81611/1063/27346/64785/9401/26271/51026/641/1869/10535/1029/28998/1763/8970/54892/55159/864/93594/1789/4176/7111/3148/116832/9585/9735/55732/81624/23310/1871/1031/79915/995/10051/30012/1104/80178/78995/7468/284403/5230/8549/7884/5558/4172/5424/79866/3182/56902/83990 ## SGCGSSAAA_E2F1DP2_01 79733/6241/4171/993/990/3159/9768/4175/4173/29028/3015/4609/85236/5111/64785/26271/51053/1869/5427/4176/5902/4436/1871/79915/9088/6632/284403/7290/4172/5424/124222/1633/7374/2189/4678/2289/50/63967/56886/23234/6839/1786/204/51087/23636/1174/83463/10492/79173 ## E2F1_Q6 79733/6241/983/5080/81620/2146/4171/993/990/3159/9768/4998/4175/4173/29028/3015/4609/85236/5111/64785/26271/51053/1869/3925/5427/4176/7112/5902/4436/1871/79915/9088/6632/284403/7290/2597/4172/5424/124222/1633/10849/7374/9824/2189/4678/2289/6646/29902/50/63967/56886/23234/6839/1786/204/51087/23636/11335/1174/83463/10492/79173/688 ## E2F_Q4 8318/79733/6241/983/5080/81620/2146/4171/993/990/5888/9768/4175/4173/29028/3015/85236/5111/64785/26271/51053/1869/3925/5427/23649/4176/7112/5902/4436/1871/79915/9088/6632/284403/7290/2597/4172/5424/124222/1633/10849/7473/7374/9824/7353/4678/6646/50/63967/56886/23234/1786/204/6427/51087/23636 ## E2F_Q6 8318/79733/6241/983/5080/81620/2146/4171/993/990/5888/9768/4175/4173/29028/3015/85236/5111/64785/26271/51053/1869/3925/5427/23649/4176/7112/5902/4436/1871/79915/9088/6632/284403/7290/2597/4172/5424/124222/1633/10849/7374/9824/7353/4678/6646/50/63967/56886/23234/1786/204/6427/51087/23636 Chapter 13 Functional enrichment analysis of genomic coordinations Functional analysis using NGS data (eg, RNA-Seq and ChIP-Seq) can be performed by linking coding and non-coding regions to coding genes via ChIPseeker (Yu, Wang, and He 2015) package, which can annotates genomic regions to their nearest genes, host genes, and flanking genes respectivly. In addtion, it provides a function, seq2gene, that simultaneously considering host genes, promoter region and flanking gene from intergenic region that may under control via cis-regulation. This function maps genomic regions to genes in a many-to-many manner and facilitate functional analysis. For more details, please refer to ChIPseeker (Yu, Wang, and He 2015). Chapter 14 Biological theme comparison The clusterProfiler package was developed for biological theme comparison (Yu et al. 2012; Wu et al. 2021), and it provides a function, compareCluster, to automatically calculate enriched functional profiles of each gene clusters and aggregate the results into a single object. Comparing functional profiles can reveal functional consensus and differences among different experiments and helps in identifying differential functional modules in omics datasets. 14.1 Comparing multiple gene lists The compareCluster() function applies selected function (via the fun parameter) to perform enrichment analysis for each gene list. data(gcSample) str(gcSample) ## List of 8 ## $ X1: chr [1:216] &quot;4597&quot; &quot;7111&quot; &quot;5266&quot; &quot;2175&quot; ... ## $ X2: chr [1:805] &quot;23450&quot; &quot;5160&quot; &quot;7126&quot; &quot;26118&quot; ... ## $ X3: chr [1:392] &quot;894&quot; &quot;7057&quot; &quot;22906&quot; &quot;3339&quot; ... ## $ X4: chr [1:838] &quot;5573&quot; &quot;7453&quot; &quot;5245&quot; &quot;23450&quot; ... ## $ X5: chr [1:929] &quot;5982&quot; &quot;7318&quot; &quot;6352&quot; &quot;2101&quot; ... ## $ X6: chr [1:585] &quot;5337&quot; &quot;9295&quot; &quot;4035&quot; &quot;811&quot; ... ## $ X7: chr [1:582] &quot;2621&quot; &quot;2665&quot; &quot;5690&quot; &quot;3608&quot; ... ## $ X8: chr [1:237] &quot;2665&quot; &quot;4735&quot; &quot;1327&quot; &quot;3192&quot; ... Users can use a named list of gene IDs as the input that passed to the geneCluster parameter. ck &lt;- compareCluster(geneCluster = gcSample, fun = enrichKEGG) ck &lt;- setReadable(ck, OrgDb = org.Hs.eg.db, keyType=&quot;ENTREZID&quot;) head(ck) ## Cluster ID Description GeneRatio BgRatio ## 1 X2 hsa04110 Cell cycle 18/380 124/8087 ## 2 X2 hsa05169 Epstein-Barr virus infection 23/380 202/8087 ## 3 X2 hsa05340 Primary immunodeficiency 8/380 38/8087 ## 4 X2 hsa05166 Human T-cell leukemia virus 1 infection 22/380 219/8087 ## 5 X3 hsa04512 ECM-receptor interaction 9/186 88/8087 ## 6 X3 hsa04060 Cytokine-cytokine receptor interaction 17/186 295/8087 ## pvalue p.adjust qvalue ## 1 1.747566e-05 0.005242697 0.004874788 ## 2 6.970114e-05 0.010455171 0.009721475 ## 3 3.117722e-04 0.031177224 0.028989348 ## 4 5.993266e-04 0.044949493 0.041795143 ## 5 1.772661e-04 0.042517822 0.039650400 ## 6 4.326582e-04 0.042517822 0.039650400 ## geneID ## 1 CDC20/E2F1/CCNA2/E2F3/BUB1B/CDC6/DBF4/PKMYT1/CDC7/ESPL1/CCNE2/CDKN2A/SFN/BUB1/CHEK2/ORC6/CDC14B/MCM4 ## 2 LYN/ICAM1/TNFAIP3/E2F1/CCNA2/E2F3/BAK1/RUNX3/BID/IKBKE/TAP2/FAS/CCNE2/RELB/CD3E/ENTPD3/SYK/TRAF3/IKBKB/CD247/NEDD4/CD40/STAT1 ## 3 ADA/TAP2/LCK/CD79A/CD3E/CD8A/CD40/DCLRE1C ## 4 ICAM1/CDC20/E2F1/CCNA2/E2F3/ADCY7/BUB1B/ESPL1/LCK/CCNE2/RELB/CD3E/MSX1/IL15/CDKN2A/IKBKB/RANBP3/MSX2/CHEK2/NFATC4/MAP3K1/CD40 ## 5 THBS1/HSPG2/COL9A3/ITGB7/CHAD/ITGA7/LAMA4/ITGB8/ITGB5 ## 6 CXCL1/TNFRSF11B/LIFR/XCL1/GDF5/TNFRSF17/TNFRSF11A/IL5RA/EPOR/CSF2RA/TNFRSF25/BMP7/BMP4/GDF11/IL21R/IL23A/TGFB2 ## Count ## 1 18 ## 2 23 ## 3 8 ## 4 22 ## 5 9 ## 6 17 14.2 Formula interface of compareCluster As an alternaitve to using named list, the compareCluster() function also supports passing a formula to describe more complicated experimental designs (e.g., \\(Gene \\sim time + treatment\\)). mydf &lt;- data.frame(Entrez=names(geneList), FC=geneList) mydf &lt;- mydf[abs(mydf$FC) &gt; 1,] mydf$group &lt;- &quot;upregulated&quot; mydf$group[mydf$FC &lt; 0] &lt;- &quot;downregulated&quot; mydf$othergroup &lt;- &quot;A&quot; mydf$othergroup[abs(mydf$FC) &gt; 2] &lt;- &quot;B&quot; formula_res &lt;- compareCluster(Entrez~group+othergroup, data=mydf, fun=&quot;enrichKEGG&quot;) head(formula_res) ## Cluster group othergroup ID ## 1 downregulated.A downregulated A hsa04974 ## 2 downregulated.A downregulated A hsa04510 ## 3 downregulated.A downregulated A hsa04151 ## 4 downregulated.A downregulated A hsa04512 ## 5 downregulated.B downregulated B hsa03320 ## 6 upregulated.A upregulated A hsa04110 ## Description GeneRatio BgRatio pvalue p.adjust ## 1 Protein digestion and absorption 16/316 103/8087 2.072453e-06 5.699245e-04 ## 2 Focal adhesion 20/316 201/8087 1.083631e-04 1.489993e-02 ## 3 PI3K-Akt signaling pathway 28/316 354/8087 2.804784e-04 2.571052e-02 ## 4 ECM-receptor interaction 11/316 88/8087 5.920352e-04 4.070242e-02 ## 5 PPAR signaling pathway 5/43 76/8087 4.675122e-05 7.199689e-03 ## 6 Cell cycle 20/219 124/8087 9.477515e-11 2.331469e-08 ## qvalue ## 1 5.388377e-04 ## 2 1.408721e-02 ## 3 2.430813e-02 ## 4 3.848229e-02 ## 5 6.791231e-03 ## 6 2.085053e-08 ## geneID ## 1 1281/50509/1290/477/1294/1360/1289/1292/1296/23428/1359/1300/1287/6505/2006/7373 ## 2 55742/2317/7058/25759/56034/3693/3480/5159/857/1292/3908/3909/63923/3913/1287/3679/7060/3479/10451/80310 ## 3 55970/5618/7058/10161/56034/3693/4254/3480/4908/5159/1292/3908/2690/3909/8817/9223/4915/3551/2791/63923/3913/9863/3667/1287/3679/7060/3479/80310 ## 4 7058/3693/3339/1292/3908/3909/63923/3913/1287/3679/7060 ## 5 9370/5105/2167/3158/5346 ## 6 4171/993/990/5347/701/9700/898/23594/4998/9134/4175/4173/10926/6502/994/699/4609/5111/1869/1029 ## Count ## 1 16 ## 2 20 ## 3 28 ## 4 11 ## 5 5 ## 6 20 14.3 Visualization of profile comparison We can visualize the result using the dotplot() method. dotplot(ck) dotplot(formula_res) Figure 14.1: Comparing enrichment results of multiple gene lists. (A) Using a named list of gene clusters, the results were displayed as multiple columns with each one represents an enrichment result of a gene cluster. (B) Using formula interface, the columns represent gene clusters defined by the formula. The fomula interface allows more complicated gene cluster definition. In Figure 14.1B, the gene clusters were defined by two variables (i.e.¬†group that divides genes into upregulated and downregulated and othergroup that divides the genes into two categories of A and B.). The dotplot() function allows us to use one variable to divide the result into different facet and plot the result with other variables in each facet panel (Figure 14.2). dotplot(formula_res, x=&quot;group&quot;) + facet_grid(~othergroup) Figure 14.2: Comparing enrichment results of multiple gene lists defined by multiple variable. The results were visualized as a dot plot with an x-axis representing one level of conditions (the group variable) and a facet panel indicating another level of conditions (the othergroup variable). By default, only top 5 (most significant) categories of each cluster was plotted. User can changes the parameter showCategory to specify how many categories of each cluster to be plotted, and if showCategory was set to NULL, the whole result will be plotted. The dotplot() function tries to make the comparison among different clusters more informative and reasonable. After extracting e.g. 10 categories for each clusters, clusterProfiler tries to collect overlap of these categories among clusters. For example, term A is enriched in all the gene clusters (e.g., g1 and g2) and is in the 10 most significant categories of g1 but not g2. clusterProfiler will capture this information and include term A in g2 cluster to make the comparison in dotplot more reasonable. If users want to ignore these information, they can set includeAll = FALSE in dotplot(), which is not recommended. The dotplot() function accepts a parameter by for setting the scale of dot sizes. The default parameter by is setting to geneRatio, which corresponding to the GeneRatio column of the output. If it was setting to count, the comparison will be based on gene counts, while if setting to rowPercentage, the dot sizes will be normalized by count/(sum of each row). Users can also map the dot size to other derived variable (see Chapter 16). To provide the full information, we also provide number of identified genes in each category (numbers in parentheses) when by is setting to rowPercentage and number of gene clusters in each cluster label (numbers in parentheses) when by is setting to geneRatio, as shown in Figure 14.1. The p-values indicate that which categories are more likely to have biological meanings. The dots in the plot are color-coded based on their corresponding adjusted p-values. Color gradient ranging from red to blue correspond to the order of increasing adjusted p-values. That is, red indicate low p-values (high enrichment), and blue indicate high p-values (low enrichment). Adjusted p-values were filtered out by the threshold giving by the parameter pvalueCutoff, and FDR can be estimated by qvalue. 14.4 Summary The comparison function was designed as a framework for comparing gene clusters of any kind of ontology associations, not only groupGO, enrichGO, enrichKEGG, enrichMKEGG, enrichWP and enricher that were provided in this package, but also other biological and biomedical ontologies, including but not limited to enrichPathway, enrichDO, enrichNCG, enrichDGN and enrichMeSH. In (Yu et al. 2012), we analyzed the publicly available expression dataset of breast tumour tissues from 200 patients (GSE11121, Gene Expression Omnibus) (Schmidt et al. 2008). We identified 8 gene clusters from differentially expressed genes, and using the compareCluster() function to compare these gene clusters by their enriched biological process. In (Wu et al. 2021), we analyzed the GSE8057 dataset which contains expression data from ovarian cancer cells at multiple time points and under two treatment conditions. Eight groups of DEG lists were analyzed simultaneously using compareCluster() with WikiPathways. The result indicates that the two drgus have distinct effects at the begining but consistent effects in the later stages (Fig. 4 of (Wu et al. 2021)). Chapter 15 Visualization of functional enrichment result The enrichplot package implements several visualization methods to help interpreting enrichment results. It supports visualizing enrichment results obtained from DOSE (Yu et al. 2015), clusterProfiler (Yu et al. 2012), ReactomePA (Yu and He 2016) and meshes (Yu 2018). Both over representation analysis (ORA) and gene set enrichment analysis (GSEA) are supported. Several visualization methods were first implemented in DOSE and rewrote from scratch using ggplot2. If you want to use the old methods, you can use the doseplot package. 15.1 Bar Plot Bar plot is the most widely used method to visualize enriched terms. It depicts the enrichment scores (e.g. p values) and gene count or ratio as bar height and color. library(DOSE) data(geneList) de &lt;- names(geneList)[abs(geneList) &gt; 2] edo &lt;- enrichDGN(de) library(enrichplot) barplot(edo, showCategory=20) Figure 15.1: Bar plot of enriched terms. 15.2 Dot plot Dot plot is similar to bar plot with the capability to encode another score as dot size. edo2 &lt;- gseDO(geneList) dotplot(edo, showCategory=30) + ggtitle(&quot;dotplot for ORA&quot;) dotplot(edo2, showCategory=30) + ggtitle(&quot;dotplot for GSEA&quot;) Figure 15.2: Dot plot of enriched terms. 15.3 Gene-Concept Network Both the barplot() and dotplot() only displayed most significant enriched terms, while users may want to know which genes are involved in these significant terms. In order to consider the potentially biological complexities in which a gene may belong to multiple annotation categories and provide information of numeric changes if available, we developed cnetplot() function to extract the complex association. The cnetplot() depicts the linkages of genes and biological concepts (e.g. GO terms or KEGG pathways) as a network. GSEA result is also supported with only core enriched genes displayed. ## convert gene ID to Symbol edox &lt;- setReadable(edo, &#39;org.Hs.eg.db&#39;, &#39;ENTREZID&#39;) p1 &lt;- cnetplot(edox, foldChange=geneList) ## categorySize can be scaled by &#39;pvalue&#39; or &#39;geneNum&#39; p2 &lt;- cnetplot(edox, categorySize=&quot;pvalue&quot;, foldChange=geneList) p3 &lt;- cnetplot(edox, foldChange=geneList, circular = TRUE, colorEdge = TRUE) cowplot::plot_grid(p1, p2, p3, ncol=3, labels=LETTERS[1:3], rel_widths=c(.8, .8, 1.2)) Figure 15.3: Network plot of enriched terms. If you would like label subset of the nodes, you can use the node_label parameter, which supports 4 possible selections (i.e.¬†‚Äúcategory,‚Äù ‚Äúgene,‚Äù ‚Äúall‚Äù and ‚Äúnone‚Äù), as demonstrated in Figure 15.4. p1 &lt;- cnetplot(edox, node_label=&quot;category&quot;) p2 &lt;- cnetplot(edox, node_label=&quot;gene&quot;) p3 &lt;- cnetplot(edox, node_label=&quot;all&quot;) p4 &lt;- cnetplot(edox, node_label=&quot;none&quot;) cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4]) Figure 15.4: Labelling nodes by selected subset. gene category (A), gene name (B), both gene category and gene name (C, default) and not to label at all (D). 15.4 Heatmap-like functional classification The heatplot is similar to cnetplot, while displaying the relationships as a heatmap. The gene-concept network may become too complicated if user want to show a large number significant terms. The heatplot can simplify the result and more easy to identify expression patterns. p1 &lt;- heatplot(edox) p2 &lt;- heatplot(edox, foldChange=geneList) cowplot::plot_grid(p1, p2, ncol=1, labels=LETTERS[1:2]) Figure 15.5: Heatmap plot of enriched terms. default (A), foldChange=geneList (B) 15.5 Enrichment Map Enrichment map organizes enriched terms into a network with edges connecting overlapping gene sets. In this way, mutually overlapping gene sets are tend to cluster together, making it easy to identify functional module. The emapplot function supports results obtained from hypergeometric test and gene set enrichment analysis. The cex_category parameter can be used to resize nodes, as demonstrated in Figure 15.6 B, and the layout parameter can adjust the layout, as demonstrated in Figure 15.6 C and D. edo &lt;- pairwise_termsim(edo) p1 &lt;- emapplot(edo) p2 &lt;- emapplot(edo, cex_category=1.5) p3 &lt;- emapplot(edo, layout=&quot;kk&quot;) p4 &lt;- emapplot(edo, cex_category=1.5,layout=&quot;kk&quot;) cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4]) Figure 15.6: Plot for results obtained from hypergeometric test and gene set enrichment analysis. default (A), cex_category=1.5 (B), layout=\"kk\" (C) and cex_category=1.5,layout=\"kk\" (D). 15.6 Biological theme comparison The emapplot function also supports results obtained from compareCluster function of clusterProfiler package. In addition to cex_category and layout parameters, the number of circles in the bottom left corner can be adjusted using the legend_n parameteras, as demonstrated in Figure 15.7 B. And proportion of clusters in the pie chart can be adjusted using the pie parameter, when pie=\"count\", the proportion of clusters in the pie chart is determined by the number of genes, as demonstrated in Figure 15.7 C and D. library(clusterProfiler) data(gcSample) xx &lt;- compareCluster(gcSample, fun=&quot;enrichKEGG&quot;, organism=&quot;hsa&quot;, pvalueCutoff=0.05) xx &lt;- pairwise_termsim(xx) p1 &lt;- emapplot(xx) p2 &lt;- emapplot(xx, legend_n=2) p3 &lt;- emapplot(xx, pie=&quot;count&quot;) p4 &lt;- emapplot(xx, pie=&quot;count&quot;, cex_category=1.5, layout=&quot;kk&quot;) cowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4]) Figure 15.7: Plot for results obtained from compareCluster function of clusterProfiler package. default (A), legend_n=2 (B), pie=\"count\" (C) and pie=\"count\", cex_category=1.5, layout=\"kk\" (D). 15.7 UpSet Plot The upsetplot is an alternative to cnetplot for visualizing the complex association between genes and gene sets. It emphasizes the gene overlapping among different gene sets. upsetplot(edo) Figure 15.8: Upsetplot for over-representation analysis. For over-representation analysis, upsetplot will calculate the overlaps among different gene sets as demonstrated in Figure 15.8. For GSEA result, it will plot the fold change distributions of different categories (e.g.¬†unique to pathway, overlaps among different pathways). upsetplot(kk2) Figure 15.9: Upsetplot for gene set enrichment analysis. 15.8 ridgeline plot for expression distribution of GSEA result The ridgeplot will visualize expression distributions of core enriched genes for GSEA enriched categories. It helps users to interpret up/down-regulated pathways. ridgeplot(edo2) Figure 15.10: Ridgeplot for gene set enrichment analysis. 15.9 running score and preranked list of GSEA result Running score and preranked list are traditional methods for visualizing GSEA result. The enrichplot package supports both of them to visualize the distribution of the gene set and the enrichment score. p1 &lt;- gseaplot(edo2, geneSetID = 1, by = &quot;runningScore&quot;, title = edo2$Description[1]) p2 &lt;- gseaplot(edo2, geneSetID = 1, by = &quot;preranked&quot;, title = edo2$Description[1]) p3 &lt;- gseaplot(edo2, geneSetID = 1, title = edo2$Description[1]) cowplot::plot_grid(p1, p2, p3, ncol=1, labels=LETTERS[1:3]) Figure 15.11: gseaplot for GSEA result(by = \"runningScore\"). by = \"runningScore\" (A), by = \"preranked\" (B), default (C) Another method to plot GSEA result is the gseaplot2 function: gseaplot2(edo2, geneSetID = 1, title = edo2$Description[1]) Figure 15.12: Gseaplot2 for GSEA result. The gseaplot2 also supports multile gene sets to be displayed on the same figure: gseaplot2(edo2, geneSetID = 1:3) Figure 15.13: Gseaplot2 for GSEA result of multile gene sets. User can also displaying the pvalue table on the plot via pvalue_table parameter: gseaplot2(edo2, geneSetID = 1:3, pvalue_table = TRUE, color = c(&quot;#E495A5&quot;, &quot;#86B875&quot;, &quot;#7DB0DD&quot;), ES_geom = &quot;dot&quot;) Figure 15.14: Gseaplot2 for GSEA result of multile gene sets(add pvalue_table). User can specify subplots to only display a subset of plots: p1 &lt;- gseaplot2(edo2, geneSetID = 1:3, subplots = 1) p2 &lt;- gseaplot2(edo2, geneSetID = 1:3, subplots = 1:2) cowplot::plot_grid(p1, p2, ncol=1, labels=LETTERS[1:2]) Figure 15.15: Gseaplot2 for GSEA result of multile gene sets(add subplots). subplots = 1 (A),subplots = 1:2 (B) The gsearank function plot the ranked list of genes belong to the specific gene set. gsearank(edo2, 1, title = edo2[1, &quot;Description&quot;]) Figure 15.16: Ranked list of genes belong to the specific gene set. Multiple gene sets can be aligned using cowplot: library(ggplot2) library(cowplot) pp &lt;- lapply(1:3, function(i) { anno &lt;- edo2[i, c(&quot;NES&quot;, &quot;pvalue&quot;, &quot;p.adjust&quot;)] lab &lt;- paste0(names(anno), &quot;=&quot;, round(anno, 3), collapse=&quot;\\n&quot;) gsearank(edo2, i, edo2[i, 2]) + xlab(NULL) +ylab(NULL) + annotate(&quot;text&quot;, 10000, edo2[i, &quot;enrichmentScore&quot;] * .75, label = lab, hjust=0, vjust=0) }) plot_grid(plotlist=pp, ncol=1) Figure 15.17: Gsearank for multiple gene sets. 15.10 pubmed trend of enriched terms One of the problem of enrichment analysis is to find pathways for further investigation. Here, we provide pmcplot function to plot the number/proportion of publications trend based on the query result from PubMed Central. Of course, users can use pmcplot in other scenarios. All text that can be queried on PMC is valid as input of pmcplot. terms &lt;- edo$Description[1:5] p &lt;- pmcplot(terms, 2010:2020) p2 &lt;- pmcplot(terms, 2010:2020, proportion=FALSE) plot_grid(p, p2, ncol=2) Figure 15.18: Pmcplot of enrichment analysis. Chapter 16 dplyr verbs for manipulating enrichment result library(DOSE) data(geneList) de = names(geneList)[1:100] x = enrichDO(de) 16.1 filter filter(x, p.adjust &lt; .05, qvalue &lt; 0.2) ## # ## # over-representation test ## # ## #...@organism Homo sapiens ## #...@ontology DO ## #...@keytype ENTREZID ## #...@gene chr [1:100] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; &quot;6280&quot; &quot;2305&quot; ... ## #...pvalues adjusted by &#39;BH&#39; with cutoff &lt;0.05 ## #...28 enriched terms found ## &#39;data.frame&#39;: 28 obs. of 9 variables: ## $ ID : chr &quot;DOID:0060071&quot; &quot;DOID:5295&quot; &quot;DOID:8719&quot; &quot;DOID:3007&quot; ... ## $ Description: chr &quot;pre-malignant neoplasm&quot; &quot;intestinal disease&quot; &quot;in situ carcinoma&quot; &quot;breast ductal carcinoma&quot; ... ## $ GeneRatio : chr &quot;5/77&quot; &quot;9/77&quot; &quot;4/77&quot; &quot;4/77&quot; ... ## $ BgRatio : chr &quot;22/8007&quot; &quot;157/8007&quot; &quot;18/8007&quot; &quot;29/8007&quot; ... ## $ pvalue : num 1.67e-06 1.76e-05 2.18e-05 1.56e-04 2.08e-04 ... ## $ p.adjust : num 0.00064 0.00279 0.00279 0.0136 0.0136 ... ## $ qvalue : num 0.000461 0.002008 0.002008 0.009796 0.009796 ... ## $ geneID : chr &quot;6280/6278/10232/332/4321&quot; &quot;4312/6279/3627/10563/4283/890/366/4902/3620&quot; &quot;6280/6278/10232/332&quot; &quot;6280/6279/4751/6286&quot; ... ## $ Count : int 5 9 4 4 13 6 13 5 5 6 ... ## #...Citation ## Guangchuang Yu, Li-Gen Wang, Guang-Rong Yan, Qing-Yu He. DOSE: an ## R/Bioconductor package for Disease Ontology Semantic and Enrichment ## analysis. Bioinformatics 2015, 31(4):608-609 16.2 arrange mutate(x, geneRatio = parse_ratio(GeneRatio)) %&gt;% arrange(desc(geneRatio)) ## # ## # over-representation test ## # ## #...@organism Homo sapiens ## #...@ontology DO ## #...@keytype ENTREZID ## #...@gene chr [1:100] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; &quot;6280&quot; &quot;2305&quot; ... ## #...pvalues adjusted by &#39;BH&#39; with cutoff &lt;0.05 ## #...28 enriched terms found ## &#39;data.frame&#39;: 28 obs. of 10 variables: ## $ ID : chr &quot;DOID:3908&quot; &quot;DOID:120&quot; &quot;DOID:2394&quot; &quot;DOID:3459&quot; ... ## $ Description: chr &quot;non-small cell lung carcinoma&quot; &quot;female reproductive organ cancer&quot; &quot;ovarian cancer&quot; &quot;breast carcinoma&quot; ... ## $ GeneRatio : chr &quot;13/77&quot; &quot;13/77&quot; &quot;10/77&quot; &quot;10/77&quot; ... ## $ BgRatio : chr &quot;431/8007&quot; &quot;455/8007&quot; &quot;312/8007&quot; &quot;383/8007&quot; ... ## $ pvalue : num 2.08e-04 3.52e-04 7.54e-04 3.48e-03 1.76e-05 ... ## $ p.adjust : num 0.0136 0.01928 0.02625 0.04756 0.00279 ... ## $ qvalue : num 0.0098 0.01389 0.0189 0.03424 0.00201 ... ## $ geneID : chr &quot;6280/2305/9133/6279/7153/6278/6241/11065/10232/332/6286/3002/9212&quot; &quot;4312/6279/7153/3627/820/983/10232/6362/332/6286/9212/4321/6790&quot; &quot;4312/820/983/10232/6362/332/6286/9212/4321/6790&quot; &quot;4312/6280/6279/7153/4751/890/4085/332/6286/6790&quot; ... ## $ Count : int 13 13 10 10 9 7 7 6 6 6 ... ## $ geneRatio : num 0.169 0.169 0.13 0.13 0.117 ... ## #...Citation ## Guangchuang Yu, Li-Gen Wang, Guang-Rong Yan, Qing-Yu He. DOSE: an ## R/Bioconductor package for Disease Ontology Semantic and Enrichment ## analysis. Bioinformatics 2015, 31(4):608-609 16.3 select select(x, -geneID) %&gt;% head ## ID Description GeneRatio BgRatio ## DOID:0060071 DOID:0060071 pre-malignant neoplasm 5/77 22/8007 ## DOID:5295 DOID:5295 intestinal disease 9/77 157/8007 ## DOID:8719 DOID:8719 in situ carcinoma 4/77 18/8007 ## DOID:3007 DOID:3007 breast ductal carcinoma 4/77 29/8007 ## DOID:3908 DOID:3908 non-small cell lung carcinoma 13/77 431/8007 ## DOID:0050589 DOID:0050589 inflammatory bowel disease 6/77 90/8007 ## pvalue p.adjust qvalue Count ## DOID:0060071 1.671524e-06 0.0006401937 0.0004609887 5 ## DOID:5295 1.759049e-05 0.0027885022 0.0020079362 9 ## DOID:8719 2.184205e-05 0.0027885022 0.0020079362 4 ## DOID:3007 1.564603e-04 0.0136037018 0.0097957122 4 ## DOID:3908 2.075001e-04 0.0136037018 0.0097957122 13 ## DOID:0050589 2.131128e-04 0.0136037018 0.0097957122 6 16.4 mutate # k/M y &lt;- mutate(x, richFactor = Count / as.numeric(sub(&quot;/\\\\d+&quot;, &quot;&quot;, BgRatio))) y ## # ## # over-representation test ## # ## #...@organism Homo sapiens ## #...@ontology DO ## #...@keytype ENTREZID ## #...@gene chr [1:100] &quot;4312&quot; &quot;8318&quot; &quot;10874&quot; &quot;55143&quot; &quot;55388&quot; &quot;991&quot; &quot;6280&quot; &quot;2305&quot; ... ## #...pvalues adjusted by &#39;BH&#39; with cutoff &lt;0.05 ## #...28 enriched terms found ## &#39;data.frame&#39;: 28 obs. of 10 variables: ## $ ID : chr &quot;DOID:0060071&quot; &quot;DOID:5295&quot; &quot;DOID:8719&quot; &quot;DOID:3007&quot; ... ## $ Description: chr &quot;pre-malignant neoplasm&quot; &quot;intestinal disease&quot; &quot;in situ carcinoma&quot; &quot;breast ductal carcinoma&quot; ... ## $ GeneRatio : chr &quot;5/77&quot; &quot;9/77&quot; &quot;4/77&quot; &quot;4/77&quot; ... ## $ BgRatio : chr &quot;22/8007&quot; &quot;157/8007&quot; &quot;18/8007&quot; &quot;29/8007&quot; ... ## $ pvalue : num 1.67e-06 1.76e-05 2.18e-05 1.56e-04 2.08e-04 ... ## $ p.adjust : num 0.00064 0.00279 0.00279 0.0136 0.0136 ... ## $ qvalue : num 0.000461 0.002008 0.002008 0.009796 0.009796 ... ## $ geneID : chr &quot;6280/6278/10232/332/4321&quot; &quot;4312/6279/3627/10563/4283/890/366/4902/3620&quot; &quot;6280/6278/10232/332&quot; &quot;6280/6279/4751/6286&quot; ... ## $ Count : int 5 9 4 4 13 6 13 5 5 6 ... ## $ richFactor : num 0.2273 0.0573 0.2222 0.1379 0.0302 ... ## #...Citation ## Guangchuang Yu, Li-Gen Wang, Guang-Rong Yan, Qing-Yu He. DOSE: an ## R/Bioconductor package for Disease Ontology Semantic and Enrichment ## analysis. Bioinformatics 2015, 31(4):608-609 library(ggplot2) library(forcats) library(enrichplot) ggplot(y, showCategory = 20, aes(richFactor, fct_reorder(Description, richFactor))) + geom_segment(aes(xend=0, yend = Description)) + geom_point(aes(color=p.adjust, size = Count)) + scale_color_viridis_c(guide=guide_colorbar(reverse=TRUE)) + scale_size_continuous(range=c(2, 10)) + theme_minimal() + xlab(&quot;rich factor&quot;) + ylab(NULL) + ggtitle(&quot;Enriched Disease Ontology&quot;) Figure 16.1: Visualizing rich factor of enriched terms using lolliplot. A very similar concept is Fold Enrichment, which is defined as the ratio of two proportions, (k/n) / (M/N). Using mutate to add the fold enrichment variable is also easy: mutate(x, FoldEnrichment = parse_ratio(GeneRatio) / parse_ratio(BgRatio)) 16.5 slice We can use slice to choose rows by their ordinal position in the enrichment result. Grouped result use the ordinal position with the group. In the following example, a GSEA result of Reactome pathway was sorted by the absolute values of NES and the result was grouped by the sign of NES. We then extracted first 5 rows of each groups. The result was displayed in Figure 16.2. library(ReactomePA) data(geneList) x &lt;- gsePathway(geneList) y &lt;- arrange(x, abs(NES)) %&gt;% group_by(sign(NES)) %&gt;% slice(1:5) library(forcats) library(ggplot2) library(ggstance) library(enrichplot) ggplot(y, aes(NES, fct_reorder(Description, NES), fill=qvalues), showCategory=10) + geom_barh(stat=&#39;identity&#39;) + scale_fill_continuous(low=&#39;red&#39;, high=&#39;blue&#39;, guide=guide_colorbar(reverse=TRUE)) + theme_minimal() + ylab(NULL) Figure 16.2: Choose pathways by ordinal positions. 16.6 summarise pbar &lt;- function(x) { pi=seq(0, 1, length.out=11) mutate(x, pp = cut(p.adjust, pi)) %&gt;% group_by(pp) %&gt;% summarise(cnt = n()) %&gt;% ggplot(aes(pp, cnt)) + geom_col() + theme_minimal() + xlab(&quot;p value intervals&quot;) + ylab(&quot;Frequency&quot;) + ggtitle(&quot;p value distribution&quot;) } x &lt;- enrichDO(de, pvalueCutoff=1, qvalueCutoff=1) set.seed(2020-09-10) random_genes &lt;- sample(names(geneList), 100) y &lt;- enrichDO(random_genes, pvalueCutoff=1, qvalueCutoff=1) p1 &lt;- pbar(x) p2 &lt;- pbar(y) cowplot::plot_grid(p1, p2, ncol=1, labels = LETTERS[1:2]) Figure 16.3: Distribution of adjusted p-values. Chapter 17 Useful utilities 17.1 Translating Biological ID 17.1.1 bitr: Biological Id TranslatoR The clusterProfiler package provides the bitr() and bitr_kegg() functions for converting ID types. Both bitr() and bitr_kegg() support many species including model and many non-model organisms. x &lt;- c(&quot;GPX3&quot;, &quot;GLRX&quot;, &quot;LBP&quot;, &quot;CRYAB&quot;, &quot;DEFB1&quot;, &quot;HCLS1&quot;, &quot;SOD2&quot;, &quot;HSPA2&quot;, &quot;ORM1&quot;, &quot;IGFBP1&quot;, &quot;PTHLH&quot;, &quot;GPC3&quot;, &quot;IGFBP3&quot;,&quot;TOB1&quot;, &quot;MITF&quot;, &quot;NDRG1&quot;, &quot;NR1H4&quot;, &quot;FGFR3&quot;, &quot;PVR&quot;, &quot;IL6&quot;, &quot;PTPRM&quot;, &quot;ERBB2&quot;, &quot;NID2&quot;, &quot;LAMB1&quot;, &quot;COMP&quot;, &quot;PLS3&quot;, &quot;MCAM&quot;, &quot;SPP1&quot;, &quot;LAMC1&quot;, &quot;COL4A2&quot;, &quot;COL4A1&quot;, &quot;MYOC&quot;, &quot;ANXA4&quot;, &quot;TFPI2&quot;, &quot;CST6&quot;, &quot;SLPI&quot;, &quot;TIMP2&quot;, &quot;CPM&quot;, &quot;GGT1&quot;, &quot;NNMT&quot;, &quot;MAL&quot;, &quot;EEF1A2&quot;, &quot;HGD&quot;, &quot;TCN2&quot;, &quot;CDA&quot;, &quot;PCCA&quot;, &quot;CRYM&quot;, &quot;PDXK&quot;, &quot;STC1&quot;, &quot;WARS&quot;, &quot;HMOX1&quot;, &quot;FXYD2&quot;, &quot;RBP4&quot;, &quot;SLC6A12&quot;, &quot;KDELR3&quot;, &quot;ITM2B&quot;) eg = bitr(x, fromType=&quot;SYMBOL&quot;, toType=&quot;ENTREZID&quot;, OrgDb=&quot;org.Hs.eg.db&quot;) head(eg) ## SYMBOL ENTREZID ## 1 GPX3 2878 ## 2 GLRX 2745 ## 3 LBP 3929 ## 4 CRYAB 1410 ## 5 DEFB1 1672 ## 6 HCLS1 3059 User should provides an annotation package, both fromType and toType can accept any types that supported. User can use keytypes to list all supporting types. library(org.Hs.eg.db) keytypes(org.Hs.eg.db) ## [1] &quot;ACCNUM&quot; &quot;ALIAS&quot; &quot;ENSEMBL&quot; &quot;ENSEMBLPROT&quot; &quot;ENSEMBLTRANS&quot; ## [6] &quot;ENTREZID&quot; &quot;ENZYME&quot; &quot;EVIDENCE&quot; &quot;EVIDENCEALL&quot; &quot;GENENAME&quot; ## [11] &quot;GENETYPE&quot; &quot;GO&quot; &quot;GOALL&quot; &quot;IPI&quot; &quot;MAP&quot; ## [16] &quot;OMIM&quot; &quot;ONTOLOGY&quot; &quot;ONTOLOGYALL&quot; &quot;PATH&quot; &quot;PFAM&quot; ## [21] &quot;PMID&quot; &quot;PROSITE&quot; &quot;REFSEQ&quot; &quot;SYMBOL&quot; &quot;UCSCKG&quot; ## [26] &quot;UNIPROT&quot; We can translate from one type to other types. ids &lt;- bitr(x, fromType=&quot;SYMBOL&quot;, toType=c(&quot;UNIPROT&quot;, &quot;ENSEMBL&quot;), OrgDb=&quot;org.Hs.eg.db&quot;) ## Warning in bitr(x, fromType = &quot;SYMBOL&quot;, toType = c(&quot;UNIPROT&quot;, &quot;ENSEMBL&quot;), : ## 1.79% of input gene IDs are fail to map... head(ids) ## SYMBOL UNIPROT ENSEMBL ## 1 GPX3 P22352 ENSG00000211445 ## 2 GLRX A0A024RAM2 ENSG00000173221 ## 3 GLRX P35754 ENSG00000173221 ## 4 LBP P18428 ENSG00000129988 ## 5 LBP Q8TCF0 ENSG00000129988 ## 6 CRYAB P02511 ENSG00000109846 For GO analysis, user don‚Äôt need to convert ID, all ID type provided by OrgDb can be used in groupGO, enrichGO and gseGO by specifying keyType parameter. Users can use the bitr function to convert IDs using any ID types that available in the OrbDb object. For example, users may want to know the genes in background that are belong to a specific GO term. Such information can be easily accessed using bitr. m &lt;- bitr(&quot;GO:0006805&quot;, fromType=&quot;GO&quot;, toType = &quot;SYMBOL&quot;, OrgDb=org.Hs.eg.db) dim(m) ## [1] 111 4 head(m) ## GO EVIDENCE ONTOLOGY SYMBOL ## 1 GO:0006805 TAS BP NAT1 ## 2 GO:0006805 TAS BP NAT2 ## 3 GO:0006805 TAS BP AADAC ## 4 GO:0006805 TAS BP AOC1 ## 5 GO:0006805 TAS BP ACY1 ## 6 GO:0006805 TAS BP AHR Note: If you want to extract genes in your input gene list that are belong to a specific term/pathway, you can use the geneInCategory function. 17.1.2 bitr_kegg: converting biological IDs using KEGG API data(gcSample) hg &lt;- gcSample[[1]] head(hg) ## [1] &quot;4597&quot; &quot;7111&quot; &quot;5266&quot; &quot;2175&quot; &quot;755&quot; &quot;23046&quot; eg2np &lt;- bitr_kegg(hg, fromType=&#39;kegg&#39;, toType=&#39;ncbi-proteinid&#39;, organism=&#39;hsa&#39;) ## Warning in bitr_kegg(hg, fromType = &quot;kegg&quot;, toType = &quot;ncbi-proteinid&quot;, organism ## = &quot;hsa&quot;): 3.7% of input gene IDs are fail to map... head(eg2np) ## kegg ncbi-proteinid ## 1 10001 NP_005457 ## 2 10209 NP_005792 ## 3 10232 NP_037536 ## 4 10324 NP_006054 ## 5 10411 NP_001092002 ## 6 10614 NP_006451 The ID type (both fromType &amp; toType) should be one of ‚Äòkegg,‚Äô ‚Äòncbi-geneid,‚Äô ‚Äòncbi-proteinid‚Äô or ‚Äòuniprot.‚Äô The ‚Äòkegg‚Äô is the primary ID used in KEGG database. The data source of KEGG was from NCBI. A rule of thumb for the ‚Äòkegg‚Äô ID is entrezgene ID for eukaryote species and Locus ID for prokaryotes. Many prokaryote species don‚Äôt have entrezgene ID available. For example we can check the gene information of ece:Z5100 in http://www.genome.jp/dbget-bin/www_bget?ece:Z5100, which have NCBI-ProteinID and UnitProt links in the Other DBs Entry, but not NCBI-GeneID. If we try to convert Z5100 to ncbi-geneid, bitr_kegg will throw error of ncbi-geneid is not supported. bitr_kegg(&quot;Z5100&quot;, fromType=&quot;kegg&quot;, toType=&#39;ncbi-geneid&#39;, organism=&#39;ece&#39;) ## Error in KEGG_convert(fromType, toType, organism) : ## ncbi-geneid is not supported for ece ... We can of course convert it to ncbi-proteinid and uniprot: bitr_kegg(&quot;Z5100&quot;, fromType=&quot;kegg&quot;, toType=&#39;ncbi-proteinid&#39;, organism=&#39;ece&#39;) ## kegg ncbi-proteinid ## 1 Z5100 AAG58814 bitr_kegg(&quot;Z5100&quot;, fromType=&quot;kegg&quot;, toType=&#39;uniprot&#39;, organism=&#39;ece&#39;) ## kegg uniprot ## 1 Z5100 A0A7Z3D5K5 17.2 setReadable: translating gene IDs to human readable symbols Some of the functions, especially those internally supported for DO, GO, and Reactome Pathway, support a parameter, readable. If readable = TRUE, all the gene IDs will be translated to gene symbols. The readable parameter is not available for enrichment analysis of KEGG or using user‚Äôs own annotation. KEGG analysis using enrichKEGG and gseKEGG, which internally query annotation information from KEEGG database and thus support all species if it is available in the KEGG database. However, KEGG database doesn‚Äôt provide gene ID to symbol mapping information. For analysis using user‚Äôs own annotation data, we even don‚Äôt know what species is in analyzed. Translating gene IDs to gene symbols is partly supported using the setReadable function if and only if there is an OrgDb available. library(org.Hs.eg.db) library(clusterProfiler) data(geneList, package=&quot;DOSE&quot;) de &lt;- names(geneList)[1:100] x &lt;- enrichKEGG(de) ## The geneID column is ENTREZID head(x, 3) ## ID Description GeneRatio BgRatio pvalue ## hsa04110 hsa04110 Cell cycle 8/48 124/8087 5.499447e-07 ## hsa04218 hsa04218 Cellular senescence 7/48 156/8087 3.292600e-05 ## hsa04114 hsa04114 Oocyte meiosis 6/48 129/8087 1.039030e-04 ## p.adjust qvalue geneID Count ## hsa04110 6.489348e-05 0.0000590467 8318/991/9133/890/983/4085/7272/1111 8 ## hsa04218 1.942634e-03 0.0017676064 2305/4605/9133/890/983/51806/1111 7 ## hsa04114 4.086853e-03 0.0037186351 991/9133/983/4085/51806/6790 6 y &lt;- setReadable(x, OrgDb = org.Hs.eg.db, keyType=&quot;ENTREZID&quot;) ## The geneID column is translated to symbol head(y, 3) ## ID Description GeneRatio BgRatio pvalue ## hsa04110 hsa04110 Cell cycle 8/48 124/8087 5.499447e-07 ## hsa04218 hsa04218 Cellular senescence 7/48 156/8087 3.292600e-05 ## hsa04114 hsa04114 Oocyte meiosis 6/48 129/8087 1.039030e-04 ## p.adjust qvalue ## hsa04110 6.489348e-05 0.0000590467 ## hsa04218 1.942634e-03 0.0017676064 ## hsa04114 4.086853e-03 0.0037186351 ## geneID Count ## hsa04110 CDC45/CDC20/CCNB2/CCNA2/CDK1/MAD2L1/TTK/CHEK1 8 ## hsa04218 FOXM1/MYBL2/CCNB2/CCNA2/CDK1/CALML5/CHEK1 7 ## hsa04114 CDC20/CCNB2/CDK1/MAD2L1/CALML5/AURKA 6 For those functions that internally support readable parameter, user can also use setReadable for translating gene IDs. 17.3 Parsing GMT files The GMT (Gene Matrix Transposed) file format is a tab delimited file format that is widely used to describe gene sets. Each row in the GMT format represents one gene set and each gene set is described by a name (or ID), a description and the genes in the gene set as illustrated in Figure 17.1. Figure 17.1: The GMT format. Figure taken from https://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats. The clusterProfiler package implemented a function, read.gmt(), to parse GMT file into a data.frame. The WikiPathway GMT file encodes information of version, wpid and species into the Description column. The clusterProfiler provides the read.gmt.wp() function to parse WikiPathway GMT file and supports parsing information that encoded in the Description column. url &lt;- &quot;https://maayanlab.cloud/Enrichr/geneSetLibrary?mode=text&amp;libraryName=COVID-19_Related_Gene_Sets&quot; download.file(url, destfile = &quot;COVID19_GeneSets.gmt&quot;) covid19_gs &lt;- read.gmt(&quot;COVID19_GeneSets.gmt&quot;) head(covid19_gs) ## term gene ## 1 COVID19-E protein host PPI from Krogan BRD4 ## 2 COVID19-E protein host PPI from Krogan BRD2 ## 3 COVID19-E protein host PPI from Krogan SLC44A2 ## 4 COVID19-E protein host PPI from Krogan ZC3H18 ## 5 COVID19-E protein host PPI from Krogan AP3B1 ## 6 COVID19-E protein host PPI from Krogan CWC27 Gene set resources: https://maayanlab.cloud/Enrichr/#stats http://ge-lab.org/#/data There are many gene sets available online. After parsing by the read.gmt() function, the data can be directly used to perform enrichment analysis using enricher() and GSEA() functions (see also Chapter 12). 17.4 GO utilities 17.4.1 drop specific GO terms or level The enrichGO() function tests the whole GO corpus and enriched result may contains very general terms. With dropGO function, user can remove specific GO terms or GO level from results obtained from both enrichGO() and compareCluster(). 17.4.2 test GO at sepcific level The enrichGO() doesn‚Äôt contain parameter to restrict the test at specific GO level. Instead, we provide a function, gofilter(), to restrict the result at specific GO level. It works with results obtained from both enrichGO() and compareCluster(). 17.4.3 reduce redundancy of enriched GO terms GO is organized in parent-child structure, thus a parent term can be overlapped with a large proportion with all its child terms. This can result in redundant findings. To solve this issue, clusterProfiler implements simplify method to reduce redundant GO terms from the outputs of enrichGO() and gseGO(). The function internally called GOSemSim (Yu et al. 2010) to calculate semantic similarity among GO terms and remove those highly similar terms by keeping one representative term. The simplify() method apply select_fun (which can be a user defined function) to feature by to select one representative term from redundant terms (which have similarity higher than cutoff). In Figure 17.2A, we can found that there are many redundant terms form a highly condense network. After removing redundant terms using the simplify() method, the result is more clear to view the whole story. data(geneList, package=&quot;DOSE&quot;) de &lt;- names(geneList)[abs(geneList) &gt; 2] bp &lt;- enrichGO(de, ont=&quot;BP&quot;, OrgDb = &#39;org.Hs.eg.db&#39;) bp &lt;- pairwise_termsim(bp) bp2 &lt;- simplify(bp, cutoff=0.7, by=&quot;p.adjust&quot;, select_fun=min) p1 &lt;- emapplot(bp) p2 &lt;- emapplot(bp2) cowplot::plot_grid(p1, p2, ncol=2, labels = LETTERS[1:2]) Figure 17.2: Visualize enriched terms by EnrichmentMap using the emapplot() function. (A) original result. (B) simplify result. Alternatively, users can use slim version of GO and use the enricher() o r gseGO() functions to analyze. A Frequently asked questions A.1 How to prepare your own geneList GSEA analysis requires a ranked gene list, which contains three features: numeric vector: fold change or other type of numerical variable named vector: every number has a name, the corresponding gene ID sorted vector: number should be sorted in decreasing order If you import your data from a csv file, the file should contains two columns, one for gene ID (no duplicated ID allowed) and another one for fold change. You can prepare your own geneList via the following command: d = read.csv(your_csv_file) ## assume 1st column is ID ## 2nd column is FC ## feature 1: numeric vector geneList = d[,2] ## feature 2: named vector names(geneList) = as.character(d[,1]) ## feature 3: decreasing orde geneList = sort(geneList, decreasing = TRUE) A.2 No gene can be mapped https://www.biostars.org/p/431270/ https://github.com/YuLab-SMU/clusterProfiler/issues/280 A.3 Showing specific pathways By default, all the visualization methods provided by enrichplot display most significant pathways. If users are interested to show some specific pathways (e.g.¬†excluding some unimportant pathways among the top categories), users can pass a vector of selected pathways to the showCategory parameter in dotplot(), barplot(), cnetplot() and emapplot() etc. library(DOSE) library(enrichplot) data(geneList) de &lt;- names(geneList)[1:100] x &lt;- enrichDO(de) ## show top 10 most significant pathways and want to exclude the second one ## dotplot(x, showCategory = x$Description[1:10][-2]) set.seed(2020-10-27) selected_pathways &lt;- sample(x$Description, 10) selected_pathways ## [1] &quot;in situ carcinoma&quot; ## [2] &quot;hypersensitivity reaction type IV disease&quot; ## [3] &quot;lymph node disease&quot; ## [4] &quot;esophageal carcinoma&quot; ## [5] &quot;atopic dermatitis&quot; ## [6] &quot;pulmonary sarcoidosis&quot; ## [7] &quot;esophageal cancer&quot; ## [8] &quot;Human immunodeficiency virus infectious disease&quot; ## [9] &quot;ovarian cancer&quot; ## [10] &quot;breast carcinoma&quot; p1 &lt;- dotplot(x, showCategory = 10, font.size=14) p2 &lt;- dotplot(x, showCategory = selected_pathways, font.size=14) cowplot::plot_grid(p1, p2, labels=LETTERS[1:2]) Figure A.1: Showing specific pathways. Top ten most significant pathways (A), selected ten pathways (B). Note: Another solution is using the filter verb to extract a subset of the result as described in Chapter 16. A.4 How to extract genes of a specific term/pathway id &lt;- x$ID[1:3] id ## [1] &quot;DOID:0060071&quot; &quot;DOID:5295&quot; &quot;DOID:8719&quot; x[[id[1]]] ## [1] &quot;6280&quot; &quot;6278&quot; &quot;10232&quot; &quot;332&quot; &quot;4321&quot; geneInCategory(x)[id] ## $`DOID:0060071` ## [1] &quot;6280&quot; &quot;6278&quot; &quot;10232&quot; &quot;332&quot; &quot;4321&quot; ## ## $`DOID:5295` ## [1] &quot;4312&quot; &quot;6279&quot; &quot;3627&quot; &quot;10563&quot; &quot;4283&quot; &quot;890&quot; &quot;366&quot; &quot;4902&quot; &quot;3620&quot; ## ## $`DOID:8719` ## [1] &quot;6280&quot; &quot;6278&quot; &quot;10232&quot; &quot;332&quot; References "]]
